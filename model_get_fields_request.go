/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetFieldsRequest 获取指定表格和子表中的所有字段请求
type GetFieldsRequest struct {
	ViewID *string `json:"viewID,omitempty"`
	FieldIDs []string `json:"fieldIDs,omitempty"`
	FieldTitles []string `json:"fieldTitles,omitempty"`
	Offset *int32 `json:"offset,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
}

// NewGetFieldsRequest instantiates a new GetFieldsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFieldsRequest() *GetFieldsRequest {
	this := GetFieldsRequest{}
	return &this
}

// NewGetFieldsRequestWithDefaults instantiates a new GetFieldsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFieldsRequestWithDefaults() *GetFieldsRequest {
	this := GetFieldsRequest{}
	return &this
}

// GetViewID returns the ViewID field value if set, zero value otherwise.
func (o *GetFieldsRequest) GetViewID() string {
	if o == nil || o.ViewID == nil {
		var ret string
		return ret
	}
	return *o.ViewID
}

// GetViewIDOk returns a tuple with the ViewID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFieldsRequest) GetViewIDOk() (*string, bool) {
	if o == nil || o.ViewID == nil {
		return nil, false
	}
	return o.ViewID, true
}

// HasViewID returns a boolean if a field has been set.
func (o *GetFieldsRequest) HasViewID() bool {
	if o != nil && o.ViewID != nil {
		return true
	}

	return false
}

// SetViewID gets a reference to the given string and assigns it to the ViewID field.
func (o *GetFieldsRequest) SetViewID(v string) {
	o.ViewID = &v
}

// GetFieldIDs returns the FieldIDs field value if set, zero value otherwise.
func (o *GetFieldsRequest) GetFieldIDs() []string {
	if o == nil || o.FieldIDs == nil {
		var ret []string
		return ret
	}
	return o.FieldIDs
}

// GetFieldIDsOk returns a tuple with the FieldIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFieldsRequest) GetFieldIDsOk() ([]string, bool) {
	if o == nil || o.FieldIDs == nil {
		return nil, false
	}
	return o.FieldIDs, true
}

// HasFieldIDs returns a boolean if a field has been set.
func (o *GetFieldsRequest) HasFieldIDs() bool {
	if o != nil && o.FieldIDs != nil {
		return true
	}

	return false
}

// SetFieldIDs gets a reference to the given []string and assigns it to the FieldIDs field.
func (o *GetFieldsRequest) SetFieldIDs(v []string) {
	o.FieldIDs = v
}

// GetFieldTitles returns the FieldTitles field value if set, zero value otherwise.
func (o *GetFieldsRequest) GetFieldTitles() []string {
	if o == nil || o.FieldTitles == nil {
		var ret []string
		return ret
	}
	return o.FieldTitles
}

// GetFieldTitlesOk returns a tuple with the FieldTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFieldsRequest) GetFieldTitlesOk() ([]string, bool) {
	if o == nil || o.FieldTitles == nil {
		return nil, false
	}
	return o.FieldTitles, true
}

// HasFieldTitles returns a boolean if a field has been set.
func (o *GetFieldsRequest) HasFieldTitles() bool {
	if o != nil && o.FieldTitles != nil {
		return true
	}

	return false
}

// SetFieldTitles gets a reference to the given []string and assigns it to the FieldTitles field.
func (o *GetFieldsRequest) SetFieldTitles(v []string) {
	o.FieldTitles = v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GetFieldsRequest) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFieldsRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GetFieldsRequest) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *GetFieldsRequest) SetOffset(v int32) {
	o.Offset = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetFieldsRequest) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFieldsRequest) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetFieldsRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *GetFieldsRequest) SetLimit(v int32) {
	o.Limit = &v
}

func (o GetFieldsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ViewID != nil {
		toSerialize["viewID"] = o.ViewID
	}
	if o.FieldIDs != nil {
		toSerialize["fieldIDs"] = o.FieldIDs
	}
	if o.FieldTitles != nil {
		toSerialize["fieldTitles"] = o.FieldTitles
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableGetFieldsRequest struct {
	value *GetFieldsRequest
	isSet bool
}

func (v NullableGetFieldsRequest) Get() *GetFieldsRequest {
	return v.value
}

func (v *NullableGetFieldsRequest) Set(val *GetFieldsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFieldsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFieldsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFieldsRequest(val *GetFieldsRequest) *NullableGetFieldsRequest {
	return &NullableGetFieldsRequest{value: val, isSet: true}
}

func (v NullableGetFieldsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFieldsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



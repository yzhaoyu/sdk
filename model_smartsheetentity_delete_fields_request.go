/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmartsheetentityDeleteFieldsRequest 删除字段请求
type SmartsheetentityDeleteFieldsRequest struct {
	FieldIDs []string `json:"fieldIDs,omitempty"`
}

// NewSmartsheetentityDeleteFieldsRequest instantiates a new SmartsheetentityDeleteFieldsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartsheetentityDeleteFieldsRequest() *SmartsheetentityDeleteFieldsRequest {
	this := SmartsheetentityDeleteFieldsRequest{}
	return &this
}

// NewSmartsheetentityDeleteFieldsRequestWithDefaults instantiates a new SmartsheetentityDeleteFieldsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartsheetentityDeleteFieldsRequestWithDefaults() *SmartsheetentityDeleteFieldsRequest {
	this := SmartsheetentityDeleteFieldsRequest{}
	return &this
}

// GetFieldIDs returns the FieldIDs field value if set, zero value otherwise.
func (o *SmartsheetentityDeleteFieldsRequest) GetFieldIDs() []string {
	if o == nil || o.FieldIDs == nil {
		var ret []string
		return ret
	}
	return o.FieldIDs
}

// GetFieldIDsOk returns a tuple with the FieldIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetentityDeleteFieldsRequest) GetFieldIDsOk() ([]string, bool) {
	if o == nil || o.FieldIDs == nil {
		return nil, false
	}
	return o.FieldIDs, true
}

// HasFieldIDs returns a boolean if a field has been set.
func (o *SmartsheetentityDeleteFieldsRequest) HasFieldIDs() bool {
	if o != nil && o.FieldIDs != nil {
		return true
	}

	return false
}

// SetFieldIDs gets a reference to the given []string and assigns it to the FieldIDs field.
func (o *SmartsheetentityDeleteFieldsRequest) SetFieldIDs(v []string) {
	o.FieldIDs = v
}

func (o SmartsheetentityDeleteFieldsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldIDs != nil {
		toSerialize["fieldIDs"] = o.FieldIDs
	}
	return json.Marshal(toSerialize)
}

type NullableSmartsheetentityDeleteFieldsRequest struct {
	value *SmartsheetentityDeleteFieldsRequest
	isSet bool
}

func (v NullableSmartsheetentityDeleteFieldsRequest) Get() *SmartsheetentityDeleteFieldsRequest {
	return v.value
}

func (v *NullableSmartsheetentityDeleteFieldsRequest) Set(val *SmartsheetentityDeleteFieldsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartsheetentityDeleteFieldsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartsheetentityDeleteFieldsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartsheetentityDeleteFieldsRequest(val *SmartsheetentityDeleteFieldsRequest) *NullableSmartsheetentityDeleteFieldsRequest {
	return &NullableSmartsheetentityDeleteFieldsRequest{value: val, isSet: true}
}

func (v NullableSmartsheetentityDeleteFieldsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartsheetentityDeleteFieldsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



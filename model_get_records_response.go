/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetRecordsResponse 获取指定表格和子表下指定视图中的所有记录回包
type GetRecordsResponse struct {
	Total *int32 `json:"total,omitempty"`
	HasMore *bool `json:"hasMore,omitempty"`
	Next *int32 `json:"next,omitempty"`
	Records []RecordResource `json:"records,omitempty"`
}

// NewGetRecordsResponse instantiates a new GetRecordsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRecordsResponse() *GetRecordsResponse {
	this := GetRecordsResponse{}
	return &this
}

// NewGetRecordsResponseWithDefaults instantiates a new GetRecordsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRecordsResponseWithDefaults() *GetRecordsResponse {
	this := GetRecordsResponse{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetRecordsResponse) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecordsResponse) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetRecordsResponse) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetRecordsResponse) SetTotal(v int32) {
	o.Total = &v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *GetRecordsResponse) GetHasMore() bool {
	if o == nil || o.HasMore == nil {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecordsResponse) GetHasMoreOk() (*bool, bool) {
	if o == nil || o.HasMore == nil {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *GetRecordsResponse) HasHasMore() bool {
	if o != nil && o.HasMore != nil {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *GetRecordsResponse) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *GetRecordsResponse) GetNext() int32 {
	if o == nil || o.Next == nil {
		var ret int32
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecordsResponse) GetNextOk() (*int32, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *GetRecordsResponse) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given int32 and assigns it to the Next field.
func (o *GetRecordsResponse) SetNext(v int32) {
	o.Next = &v
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *GetRecordsResponse) GetRecords() []RecordResource {
	if o == nil || o.Records == nil {
		var ret []RecordResource
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecordsResponse) GetRecordsOk() ([]RecordResource, bool) {
	if o == nil || o.Records == nil {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *GetRecordsResponse) HasRecords() bool {
	if o != nil && o.Records != nil {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []RecordResource and assigns it to the Records field.
func (o *GetRecordsResponse) SetRecords(v []RecordResource) {
	o.Records = v
}

func (o GetRecordsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.HasMore != nil {
		toSerialize["hasMore"] = o.HasMore
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Records != nil {
		toSerialize["records"] = o.Records
	}
	return json.Marshal(toSerialize)
}

type NullableGetRecordsResponse struct {
	value *GetRecordsResponse
	isSet bool
}

func (v NullableGetRecordsResponse) Get() *GetRecordsResponse {
	return v.value
}

func (v *NullableGetRecordsResponse) Set(val *GetRecordsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRecordsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRecordsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRecordsResponse(val *GetRecordsResponse) *NullableGetRecordsResponse {
	return &NullableGetRecordsResponse{value: val, isSet: true}
}

func (v NullableGetRecordsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRecordsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



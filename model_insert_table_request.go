/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com/open/wiki); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InsertTableRequest struct for InsertTableRequest
type InsertTableRequest struct {
	Location *Location `json:"location,omitempty"`
	Rows *int32 `json:"rows,omitempty"`
	Cols *int32 `json:"cols,omitempty"`
}

// NewInsertTableRequest instantiates a new InsertTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsertTableRequest() *InsertTableRequest {
	this := InsertTableRequest{}
	return &this
}

// NewInsertTableRequestWithDefaults instantiates a new InsertTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsertTableRequestWithDefaults() *InsertTableRequest {
	this := InsertTableRequest{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *InsertTableRequest) GetLocation() Location {
	if o == nil || o.Location == nil {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertTableRequest) GetLocationOk() (*Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *InsertTableRequest) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *InsertTableRequest) SetLocation(v Location) {
	o.Location = &v
}

// GetRows returns the Rows field value if set, zero value otherwise.
func (o *InsertTableRequest) GetRows() int32 {
	if o == nil || o.Rows == nil {
		var ret int32
		return ret
	}
	return *o.Rows
}

// GetRowsOk returns a tuple with the Rows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertTableRequest) GetRowsOk() (*int32, bool) {
	if o == nil || o.Rows == nil {
		return nil, false
	}
	return o.Rows, true
}

// HasRows returns a boolean if a field has been set.
func (o *InsertTableRequest) HasRows() bool {
	if o != nil && o.Rows != nil {
		return true
	}

	return false
}

// SetRows gets a reference to the given int32 and assigns it to the Rows field.
func (o *InsertTableRequest) SetRows(v int32) {
	o.Rows = &v
}

// GetCols returns the Cols field value if set, zero value otherwise.
func (o *InsertTableRequest) GetCols() int32 {
	if o == nil || o.Cols == nil {
		var ret int32
		return ret
	}
	return *o.Cols
}

// GetColsOk returns a tuple with the Cols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertTableRequest) GetColsOk() (*int32, bool) {
	if o == nil || o.Cols == nil {
		return nil, false
	}
	return o.Cols, true
}

// HasCols returns a boolean if a field has been set.
func (o *InsertTableRequest) HasCols() bool {
	if o != nil && o.Cols != nil {
		return true
	}

	return false
}

// SetCols gets a reference to the given int32 and assigns it to the Cols field.
func (o *InsertTableRequest) SetCols(v int32) {
	o.Cols = &v
}

func (o InsertTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Rows != nil {
		toSerialize["rows"] = o.Rows
	}
	if o.Cols != nil {
		toSerialize["cols"] = o.Cols
	}
	return json.Marshal(toSerialize)
}

type NullableInsertTableRequest struct {
	value *InsertTableRequest
	isSet bool
}

func (v NullableInsertTableRequest) Get() *InsertTableRequest {
	return v.value
}

func (v *NullableInsertTableRequest) Set(val *InsertTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInsertTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInsertTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsertTableRequest(val *InsertTableRequest) *NullableInsertTableRequest {
	return &NullableInsertTableRequest{value: val, isSet: true}
}

func (v NullableInsertTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsertTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ParagraphBorder struct for ParagraphBorder
type ParagraphBorder struct {
	Color *string `json:"color,omitempty"`
	Width *GoogleProtobufUInt32Value `json:"width,omitempty"`
	Padding *GoogleProtobufUInt32Value `json:"padding,omitempty"`
	BorderStyle *string `json:"borderStyle,omitempty"`
}

// NewParagraphBorder instantiates a new ParagraphBorder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParagraphBorder() *ParagraphBorder {
	this := ParagraphBorder{}
	return &this
}

// NewParagraphBorderWithDefaults instantiates a new ParagraphBorder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParagraphBorderWithDefaults() *ParagraphBorder {
	this := ParagraphBorder{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ParagraphBorder) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParagraphBorder) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ParagraphBorder) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ParagraphBorder) SetColor(v string) {
	o.Color = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ParagraphBorder) GetWidth() GoogleProtobufUInt32Value {
	if o == nil || o.Width == nil {
		var ret GoogleProtobufUInt32Value
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParagraphBorder) GetWidthOk() (*GoogleProtobufUInt32Value, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ParagraphBorder) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given GoogleProtobufUInt32Value and assigns it to the Width field.
func (o *ParagraphBorder) SetWidth(v GoogleProtobufUInt32Value) {
	o.Width = &v
}

// GetPadding returns the Padding field value if set, zero value otherwise.
func (o *ParagraphBorder) GetPadding() GoogleProtobufUInt32Value {
	if o == nil || o.Padding == nil {
		var ret GoogleProtobufUInt32Value
		return ret
	}
	return *o.Padding
}

// GetPaddingOk returns a tuple with the Padding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParagraphBorder) GetPaddingOk() (*GoogleProtobufUInt32Value, bool) {
	if o == nil || o.Padding == nil {
		return nil, false
	}
	return o.Padding, true
}

// HasPadding returns a boolean if a field has been set.
func (o *ParagraphBorder) HasPadding() bool {
	if o != nil && o.Padding != nil {
		return true
	}

	return false
}

// SetPadding gets a reference to the given GoogleProtobufUInt32Value and assigns it to the Padding field.
func (o *ParagraphBorder) SetPadding(v GoogleProtobufUInt32Value) {
	o.Padding = &v
}

// GetBorderStyle returns the BorderStyle field value if set, zero value otherwise.
func (o *ParagraphBorder) GetBorderStyle() string {
	if o == nil || o.BorderStyle == nil {
		var ret string
		return ret
	}
	return *o.BorderStyle
}

// GetBorderStyleOk returns a tuple with the BorderStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParagraphBorder) GetBorderStyleOk() (*string, bool) {
	if o == nil || o.BorderStyle == nil {
		return nil, false
	}
	return o.BorderStyle, true
}

// HasBorderStyle returns a boolean if a field has been set.
func (o *ParagraphBorder) HasBorderStyle() bool {
	if o != nil && o.BorderStyle != nil {
		return true
	}

	return false
}

// SetBorderStyle gets a reference to the given string and assigns it to the BorderStyle field.
func (o *ParagraphBorder) SetBorderStyle(v string) {
	o.BorderStyle = &v
}

func (o ParagraphBorder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.Padding != nil {
		toSerialize["padding"] = o.Padding
	}
	if o.BorderStyle != nil {
		toSerialize["borderStyle"] = o.BorderStyle
	}
	return json.Marshal(toSerialize)
}

type NullableParagraphBorder struct {
	value *ParagraphBorder
	isSet bool
}

func (v NullableParagraphBorder) Get() *ParagraphBorder {
	return v.value
}

func (v *NullableParagraphBorder) Set(val *ParagraphBorder) {
	v.value = val
	v.isSet = true
}

func (v NullableParagraphBorder) IsSet() bool {
	return v.isSet
}

func (v *NullableParagraphBorder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParagraphBorder(val *ParagraphBorder) *NullableParagraphBorder {
	return &NullableParagraphBorder{value: val, isSet: true}
}

func (v NullableParagraphBorder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParagraphBorder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeleteFieldsRequest 删除字段请求
type DeleteFieldsRequest struct {
	FieldIDs []string `json:"fieldIDs,omitempty"`
}

// NewDeleteFieldsRequest instantiates a new DeleteFieldsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFieldsRequest() *DeleteFieldsRequest {
	this := DeleteFieldsRequest{}
	return &this
}

// NewDeleteFieldsRequestWithDefaults instantiates a new DeleteFieldsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFieldsRequestWithDefaults() *DeleteFieldsRequest {
	this := DeleteFieldsRequest{}
	return &this
}

// GetFieldIDs returns the FieldIDs field value if set, zero value otherwise.
func (o *DeleteFieldsRequest) GetFieldIDs() []string {
	if o == nil || o.FieldIDs == nil {
		var ret []string
		return ret
	}
	return o.FieldIDs
}

// GetFieldIDsOk returns a tuple with the FieldIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFieldsRequest) GetFieldIDsOk() ([]string, bool) {
	if o == nil || o.FieldIDs == nil {
		return nil, false
	}
	return o.FieldIDs, true
}

// HasFieldIDs returns a boolean if a field has been set.
func (o *DeleteFieldsRequest) HasFieldIDs() bool {
	if o != nil && o.FieldIDs != nil {
		return true
	}

	return false
}

// SetFieldIDs gets a reference to the given []string and assigns it to the FieldIDs field.
func (o *DeleteFieldsRequest) SetFieldIDs(v []string) {
	o.FieldIDs = v
}

func (o DeleteFieldsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldIDs != nil {
		toSerialize["fieldIDs"] = o.FieldIDs
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteFieldsRequest struct {
	value *DeleteFieldsRequest
	isSet bool
}

func (v NullableDeleteFieldsRequest) Get() *DeleteFieldsRequest {
	return v.value
}

func (v *NullableDeleteFieldsRequest) Set(val *DeleteFieldsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFieldsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFieldsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFieldsRequest(val *DeleteFieldsRequest) *NullableDeleteFieldsRequest {
	return &NullableDeleteFieldsRequest{value: val, isSet: true}
}

func (v NullableDeleteFieldsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFieldsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



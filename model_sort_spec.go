/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SortSpec SortSpec 定义视图的排序
type SortSpec struct {
	Var1 []SortInfo `json:"1,omitempty"`
}

// NewSortSpec instantiates a new SortSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSortSpec() *SortSpec {
	this := SortSpec{}
	return &this
}

// NewSortSpecWithDefaults instantiates a new SortSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortSpecWithDefaults() *SortSpec {
	this := SortSpec{}
	return &this
}

// GetVar1 returns the Var1 field value if set, zero value otherwise.
func (o *SortSpec) GetVar1() []SortInfo {
	if o == nil || o.Var1 == nil {
		var ret []SortInfo
		return ret
	}
	return o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortSpec) GetVar1Ok() ([]SortInfo, bool) {
	if o == nil || o.Var1 == nil {
		return nil, false
	}
	return o.Var1, true
}

// HasVar1 returns a boolean if a field has been set.
func (o *SortSpec) HasVar1() bool {
	if o != nil && o.Var1 != nil {
		return true
	}

	return false
}

// SetVar1 gets a reference to the given []SortInfo and assigns it to the Var1 field.
func (o *SortSpec) SetVar1(v []SortInfo) {
	o.Var1 = v
}

func (o SortSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var1 != nil {
		toSerialize["1"] = o.Var1
	}
	return json.Marshal(toSerialize)
}

type NullableSortSpec struct {
	value *SortSpec
	isSet bool
}

func (v NullableSortSpec) Get() *SortSpec {
	return v.value
}

func (v *NullableSortSpec) Set(val *SortSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSortSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSortSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSortSpec(val *SortSpec) *NullableSortSpec {
	return &NullableSortSpec{value: val, isSet: true}
}

func (v NullableSortSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSortSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



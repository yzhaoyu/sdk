/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateFileReq ************************************ DriveAPI Definition *****************************************
type CreateFileReq struct {
	Title string `json:"title"`
	Type string `json:"type"`
	TemplateID *string `json:"templateID,omitempty"`
	FolderID *string `json:"folderID,omitempty"`
}

// NewCreateFileReq instantiates a new CreateFileReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFileReq(title string, type_ string) *CreateFileReq {
	this := CreateFileReq{}
	this.Title = title
	this.Type = type_
	return &this
}

// NewCreateFileReqWithDefaults instantiates a new CreateFileReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFileReqWithDefaults() *CreateFileReq {
	this := CreateFileReq{}
	return &this
}

// GetTitle returns the Title field value
func (o *CreateFileReq) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateFileReq) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateFileReq) SetTitle(v string) {
	o.Title = v
}

// GetType returns the Type field value
func (o *CreateFileReq) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateFileReq) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateFileReq) SetType(v string) {
	o.Type = v
}

// GetTemplateID returns the TemplateID field value if set, zero value otherwise.
func (o *CreateFileReq) GetTemplateID() string {
	if o == nil || o.TemplateID == nil {
		var ret string
		return ret
	}
	return *o.TemplateID
}

// GetTemplateIDOk returns a tuple with the TemplateID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileReq) GetTemplateIDOk() (*string, bool) {
	if o == nil || o.TemplateID == nil {
		return nil, false
	}
	return o.TemplateID, true
}

// HasTemplateID returns a boolean if a field has been set.
func (o *CreateFileReq) HasTemplateID() bool {
	if o != nil && o.TemplateID != nil {
		return true
	}

	return false
}

// SetTemplateID gets a reference to the given string and assigns it to the TemplateID field.
func (o *CreateFileReq) SetTemplateID(v string) {
	o.TemplateID = &v
}

// GetFolderID returns the FolderID field value if set, zero value otherwise.
func (o *CreateFileReq) GetFolderID() string {
	if o == nil || o.FolderID == nil {
		var ret string
		return ret
	}
	return *o.FolderID
}

// GetFolderIDOk returns a tuple with the FolderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileReq) GetFolderIDOk() (*string, bool) {
	if o == nil || o.FolderID == nil {
		return nil, false
	}
	return o.FolderID, true
}

// HasFolderID returns a boolean if a field has been set.
func (o *CreateFileReq) HasFolderID() bool {
	if o != nil && o.FolderID != nil {
		return true
	}

	return false
}

// SetFolderID gets a reference to the given string and assigns it to the FolderID field.
func (o *CreateFileReq) SetFolderID(v string) {
	o.FolderID = &v
}

func (o CreateFileReq) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.TemplateID != nil {
		toSerialize["templateID"] = o.TemplateID
	}
	if o.FolderID != nil {
		toSerialize["folderID"] = o.FolderID
	}
	return json.Marshal(toSerialize)
}

type NullableCreateFileReq struct {
	value *CreateFileReq
	isSet bool
}

func (v NullableCreateFileReq) Get() *CreateFileReq {
	return v.value
}

func (v *NullableCreateFileReq) Set(val *CreateFileReq) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFileReq) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFileReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFileReq(val *CreateFileReq) *NullableCreateFileReq {
	return &NullableCreateFileReq{value: val, isSet: true}
}

func (v NullableCreateFileReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFileReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com/open/wiki); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DriveapiRelativeFiles struct for DriveapiRelativeFiles
type DriveapiRelativeFiles struct {
	FileID *string `json:"fileID,omitempty"`
	TabID *string `json:"tabID,omitempty"`
	FileURL *string `json:"fileURL,omitempty"`
}

// NewDriveapiRelativeFiles instantiates a new DriveapiRelativeFiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriveapiRelativeFiles() *DriveapiRelativeFiles {
	this := DriveapiRelativeFiles{}
	return &this
}

// NewDriveapiRelativeFilesWithDefaults instantiates a new DriveapiRelativeFiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriveapiRelativeFilesWithDefaults() *DriveapiRelativeFiles {
	this := DriveapiRelativeFiles{}
	return &this
}

// GetFileID returns the FileID field value if set, zero value otherwise.
func (o *DriveapiRelativeFiles) GetFileID() string {
	if o == nil || o.FileID == nil {
		var ret string
		return ret
	}
	return *o.FileID
}

// GetFileIDOk returns a tuple with the FileID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveapiRelativeFiles) GetFileIDOk() (*string, bool) {
	if o == nil || o.FileID == nil {
		return nil, false
	}
	return o.FileID, true
}

// HasFileID returns a boolean if a field has been set.
func (o *DriveapiRelativeFiles) HasFileID() bool {
	if o != nil && o.FileID != nil {
		return true
	}

	return false
}

// SetFileID gets a reference to the given string and assigns it to the FileID field.
func (o *DriveapiRelativeFiles) SetFileID(v string) {
	o.FileID = &v
}

// GetTabID returns the TabID field value if set, zero value otherwise.
func (o *DriveapiRelativeFiles) GetTabID() string {
	if o == nil || o.TabID == nil {
		var ret string
		return ret
	}
	return *o.TabID
}

// GetTabIDOk returns a tuple with the TabID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveapiRelativeFiles) GetTabIDOk() (*string, bool) {
	if o == nil || o.TabID == nil {
		return nil, false
	}
	return o.TabID, true
}

// HasTabID returns a boolean if a field has been set.
func (o *DriveapiRelativeFiles) HasTabID() bool {
	if o != nil && o.TabID != nil {
		return true
	}

	return false
}

// SetTabID gets a reference to the given string and assigns it to the TabID field.
func (o *DriveapiRelativeFiles) SetTabID(v string) {
	o.TabID = &v
}

// GetFileURL returns the FileURL field value if set, zero value otherwise.
func (o *DriveapiRelativeFiles) GetFileURL() string {
	if o == nil || o.FileURL == nil {
		var ret string
		return ret
	}
	return *o.FileURL
}

// GetFileURLOk returns a tuple with the FileURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriveapiRelativeFiles) GetFileURLOk() (*string, bool) {
	if o == nil || o.FileURL == nil {
		return nil, false
	}
	return o.FileURL, true
}

// HasFileURL returns a boolean if a field has been set.
func (o *DriveapiRelativeFiles) HasFileURL() bool {
	if o != nil && o.FileURL != nil {
		return true
	}

	return false
}

// SetFileURL gets a reference to the given string and assigns it to the FileURL field.
func (o *DriveapiRelativeFiles) SetFileURL(v string) {
	o.FileURL = &v
}

func (o DriveapiRelativeFiles) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileID != nil {
		toSerialize["fileID"] = o.FileID
	}
	if o.TabID != nil {
		toSerialize["tabID"] = o.TabID
	}
	if o.FileURL != nil {
		toSerialize["fileURL"] = o.FileURL
	}
	return json.Marshal(toSerialize)
}

type NullableDriveapiRelativeFiles struct {
	value *DriveapiRelativeFiles
	isSet bool
}

func (v NullableDriveapiRelativeFiles) Get() *DriveapiRelativeFiles {
	return v.value
}

func (v *NullableDriveapiRelativeFiles) Set(val *DriveapiRelativeFiles) {
	v.value = val
	v.isSet = true
}

func (v NullableDriveapiRelativeFiles) IsSet() bool {
	return v.isSet
}

func (v *NullableDriveapiRelativeFiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriveapiRelativeFiles(val *DriveapiRelativeFiles) *NullableDriveapiRelativeFiles {
	return &NullableDriveapiRelativeFiles{value: val, isSet: true}
}

func (v NullableDriveapiRelativeFiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriveapiRelativeFiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CellValue struct for CellValue
type CellValue struct {
	Type *int32 `json:"type,omitempty"`
	Value *Value `json:"value,omitempty"`
	ModifiedUser *string `json:"modifiedUser,omitempty"`
	ModifiedTime *int64 `json:"modifiedTime,omitempty"`
}

// NewCellValue instantiates a new CellValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCellValue() *CellValue {
	this := CellValue{}
	return &this
}

// NewCellValueWithDefaults instantiates a new CellValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCellValueWithDefaults() *CellValue {
	this := CellValue{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CellValue) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellValue) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CellValue) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *CellValue) SetType(v int32) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CellValue) GetValue() Value {
	if o == nil || o.Value == nil {
		var ret Value
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellValue) GetValueOk() (*Value, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CellValue) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given Value and assigns it to the Value field.
func (o *CellValue) SetValue(v Value) {
	o.Value = &v
}

// GetModifiedUser returns the ModifiedUser field value if set, zero value otherwise.
func (o *CellValue) GetModifiedUser() string {
	if o == nil || o.ModifiedUser == nil {
		var ret string
		return ret
	}
	return *o.ModifiedUser
}

// GetModifiedUserOk returns a tuple with the ModifiedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellValue) GetModifiedUserOk() (*string, bool) {
	if o == nil || o.ModifiedUser == nil {
		return nil, false
	}
	return o.ModifiedUser, true
}

// HasModifiedUser returns a boolean if a field has been set.
func (o *CellValue) HasModifiedUser() bool {
	if o != nil && o.ModifiedUser != nil {
		return true
	}

	return false
}

// SetModifiedUser gets a reference to the given string and assigns it to the ModifiedUser field.
func (o *CellValue) SetModifiedUser(v string) {
	o.ModifiedUser = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *CellValue) GetModifiedTime() int64 {
	if o == nil || o.ModifiedTime == nil {
		var ret int64
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellValue) GetModifiedTimeOk() (*int64, bool) {
	if o == nil || o.ModifiedTime == nil {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *CellValue) HasModifiedTime() bool {
	if o != nil && o.ModifiedTime != nil {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given int64 and assigns it to the ModifiedTime field.
func (o *CellValue) SetModifiedTime(v int64) {
	o.ModifiedTime = &v
}

func (o CellValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ModifiedUser != nil {
		toSerialize["modifiedUser"] = o.ModifiedUser
	}
	if o.ModifiedTime != nil {
		toSerialize["modifiedTime"] = o.ModifiedTime
	}
	return json.Marshal(toSerialize)
}

type NullableCellValue struct {
	value *CellValue
	isSet bool
}

func (v NullableCellValue) Get() *CellValue {
	return v.value
}

func (v *NullableCellValue) Set(val *CellValue) {
	v.value = val
	v.isSet = true
}

func (v NullableCellValue) IsSet() bool {
	return v.isSet
}

func (v *NullableCellValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCellValue(val *CellValue) *NullableCellValue {
	return &NullableCellValue{value: val, isSet: true}
}

func (v NullableCellValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCellValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



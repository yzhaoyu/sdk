/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ViewFieldMeta ViewFieldMeta 定义视图的field元信息
type ViewFieldMeta struct {
	Hidden *bool `json:"hidden,omitempty"`
	Width *int32 `json:"width,omitempty"`
	FieldStatType *int32 `json:"fieldStatType,omitempty"`
}

// NewViewFieldMeta instantiates a new ViewFieldMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewFieldMeta() *ViewFieldMeta {
	this := ViewFieldMeta{}
	return &this
}

// NewViewFieldMetaWithDefaults instantiates a new ViewFieldMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewFieldMetaWithDefaults() *ViewFieldMeta {
	this := ViewFieldMeta{}
	return &this
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *ViewFieldMeta) GetHidden() bool {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewFieldMeta) GetHiddenOk() (*bool, bool) {
	if o == nil || o.Hidden == nil {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *ViewFieldMeta) HasHidden() bool {
	if o != nil && o.Hidden != nil {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *ViewFieldMeta) SetHidden(v bool) {
	o.Hidden = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ViewFieldMeta) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewFieldMeta) GetWidthOk() (*int32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ViewFieldMeta) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *ViewFieldMeta) SetWidth(v int32) {
	o.Width = &v
}

// GetFieldStatType returns the FieldStatType field value if set, zero value otherwise.
func (o *ViewFieldMeta) GetFieldStatType() int32 {
	if o == nil || o.FieldStatType == nil {
		var ret int32
		return ret
	}
	return *o.FieldStatType
}

// GetFieldStatTypeOk returns a tuple with the FieldStatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewFieldMeta) GetFieldStatTypeOk() (*int32, bool) {
	if o == nil || o.FieldStatType == nil {
		return nil, false
	}
	return o.FieldStatType, true
}

// HasFieldStatType returns a boolean if a field has been set.
func (o *ViewFieldMeta) HasFieldStatType() bool {
	if o != nil && o.FieldStatType != nil {
		return true
	}

	return false
}

// SetFieldStatType gets a reference to the given int32 and assigns it to the FieldStatType field.
func (o *ViewFieldMeta) SetFieldStatType(v int32) {
	o.FieldStatType = &v
}

func (o ViewFieldMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hidden != nil {
		toSerialize["hidden"] = o.Hidden
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.FieldStatType != nil {
		toSerialize["fieldStatType"] = o.FieldStatType
	}
	return json.Marshal(toSerialize)
}

type NullableViewFieldMeta struct {
	value *ViewFieldMeta
	isSet bool
}

func (v NullableViewFieldMeta) Get() *ViewFieldMeta {
	return v.value
}

func (v *NullableViewFieldMeta) Set(val *ViewFieldMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableViewFieldMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableViewFieldMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewFieldMeta(val *ViewFieldMeta) *NullableViewFieldMeta {
	return &NullableViewFieldMeta{value: val, isSet: true}
}

func (v NullableViewFieldMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewFieldMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com/open/wiki); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InsertNumberingRequest struct for InsertNumberingRequest
type InsertNumberingRequest struct {
	Range *Range `json:"range,omitempty"`
	AbstractNumID *string `json:"abstractNumID,omitempty"`
	ParagraphIndex *int32 `json:"paragraphIndex,omitempty"`
	PStyle *ParagraphStyle `json:"pStyle,omitempty"`
}

// NewInsertNumberingRequest instantiates a new InsertNumberingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsertNumberingRequest() *InsertNumberingRequest {
	this := InsertNumberingRequest{}
	return &this
}

// NewInsertNumberingRequestWithDefaults instantiates a new InsertNumberingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsertNumberingRequestWithDefaults() *InsertNumberingRequest {
	this := InsertNumberingRequest{}
	return &this
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *InsertNumberingRequest) GetRange() Range {
	if o == nil || o.Range == nil {
		var ret Range
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertNumberingRequest) GetRangeOk() (*Range, bool) {
	if o == nil || o.Range == nil {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *InsertNumberingRequest) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}

// SetRange gets a reference to the given Range and assigns it to the Range field.
func (o *InsertNumberingRequest) SetRange(v Range) {
	o.Range = &v
}

// GetAbstractNumID returns the AbstractNumID field value if set, zero value otherwise.
func (o *InsertNumberingRequest) GetAbstractNumID() string {
	if o == nil || o.AbstractNumID == nil {
		var ret string
		return ret
	}
	return *o.AbstractNumID
}

// GetAbstractNumIDOk returns a tuple with the AbstractNumID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertNumberingRequest) GetAbstractNumIDOk() (*string, bool) {
	if o == nil || o.AbstractNumID == nil {
		return nil, false
	}
	return o.AbstractNumID, true
}

// HasAbstractNumID returns a boolean if a field has been set.
func (o *InsertNumberingRequest) HasAbstractNumID() bool {
	if o != nil && o.AbstractNumID != nil {
		return true
	}

	return false
}

// SetAbstractNumID gets a reference to the given string and assigns it to the AbstractNumID field.
func (o *InsertNumberingRequest) SetAbstractNumID(v string) {
	o.AbstractNumID = &v
}

// GetParagraphIndex returns the ParagraphIndex field value if set, zero value otherwise.
func (o *InsertNumberingRequest) GetParagraphIndex() int32 {
	if o == nil || o.ParagraphIndex == nil {
		var ret int32
		return ret
	}
	return *o.ParagraphIndex
}

// GetParagraphIndexOk returns a tuple with the ParagraphIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertNumberingRequest) GetParagraphIndexOk() (*int32, bool) {
	if o == nil || o.ParagraphIndex == nil {
		return nil, false
	}
	return o.ParagraphIndex, true
}

// HasParagraphIndex returns a boolean if a field has been set.
func (o *InsertNumberingRequest) HasParagraphIndex() bool {
	if o != nil && o.ParagraphIndex != nil {
		return true
	}

	return false
}

// SetParagraphIndex gets a reference to the given int32 and assigns it to the ParagraphIndex field.
func (o *InsertNumberingRequest) SetParagraphIndex(v int32) {
	o.ParagraphIndex = &v
}

// GetPStyle returns the PStyle field value if set, zero value otherwise.
func (o *InsertNumberingRequest) GetPStyle() ParagraphStyle {
	if o == nil || o.PStyle == nil {
		var ret ParagraphStyle
		return ret
	}
	return *o.PStyle
}

// GetPStyleOk returns a tuple with the PStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertNumberingRequest) GetPStyleOk() (*ParagraphStyle, bool) {
	if o == nil || o.PStyle == nil {
		return nil, false
	}
	return o.PStyle, true
}

// HasPStyle returns a boolean if a field has been set.
func (o *InsertNumberingRequest) HasPStyle() bool {
	if o != nil && o.PStyle != nil {
		return true
	}

	return false
}

// SetPStyle gets a reference to the given ParagraphStyle and assigns it to the PStyle field.
func (o *InsertNumberingRequest) SetPStyle(v ParagraphStyle) {
	o.PStyle = &v
}

func (o InsertNumberingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Range != nil {
		toSerialize["range"] = o.Range
	}
	if o.AbstractNumID != nil {
		toSerialize["abstractNumID"] = o.AbstractNumID
	}
	if o.ParagraphIndex != nil {
		toSerialize["paragraphIndex"] = o.ParagraphIndex
	}
	if o.PStyle != nil {
		toSerialize["pStyle"] = o.PStyle
	}
	return json.Marshal(toSerialize)
}

type NullableInsertNumberingRequest struct {
	value *InsertNumberingRequest
	isSet bool
}

func (v NullableInsertNumberingRequest) Get() *InsertNumberingRequest {
	return v.value
}

func (v *NullableInsertNumberingRequest) Set(val *InsertNumberingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInsertNumberingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInsertNumberingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsertNumberingRequest(val *InsertNumberingRequest) *NullableInsertNumberingRequest {
	return &NullableInsertNumberingRequest{value: val, isSet: true}
}

func (v NullableInsertNumberingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsertNumberingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



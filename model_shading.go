/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Shading struct for Shading
type Shading struct {
	BackgroundColor *string `json:"backgroundColor,omitempty"`
}

// NewShading instantiates a new Shading object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShading() *Shading {
	this := Shading{}
	return &this
}

// NewShadingWithDefaults instantiates a new Shading object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShadingWithDefaults() *Shading {
	this := Shading{}
	return &this
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *Shading) GetBackgroundColor() string {
	if o == nil || o.BackgroundColor == nil {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shading) GetBackgroundColorOk() (*string, bool) {
	if o == nil || o.BackgroundColor == nil {
		return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *Shading) HasBackgroundColor() bool {
	if o != nil && o.BackgroundColor != nil {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *Shading) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

func (o Shading) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackgroundColor != nil {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	return json.Marshal(toSerialize)
}

type NullableShading struct {
	value *Shading
	isSet bool
}

func (v NullableShading) Get() *Shading {
	return v.value
}

func (v *NullableShading) Set(val *Shading) {
	v.value = val
	v.isSet = true
}

func (v NullableShading) IsSet() bool {
	return v.isSet
}

func (v *NullableShading) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShading(val *Shading) *NullableShading {
	return &NullableShading{value: val, isSet: true}
}

func (v NullableShading) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShading) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com/open/wiki); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmartsheetGetRecordsRsp 对外的查询记录回包
type SmartsheetGetRecordsRsp struct {
	Total *int32 `json:"total,omitempty"`
	HasMore *bool `json:"hasMore,omitempty"`
	Next *int32 `json:"next,omitempty"`
	Records []SmartsheetRecord `json:"records,omitempty"`
}

// NewSmartsheetGetRecordsRsp instantiates a new SmartsheetGetRecordsRsp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartsheetGetRecordsRsp() *SmartsheetGetRecordsRsp {
	this := SmartsheetGetRecordsRsp{}
	return &this
}

// NewSmartsheetGetRecordsRspWithDefaults instantiates a new SmartsheetGetRecordsRsp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartsheetGetRecordsRspWithDefaults() *SmartsheetGetRecordsRsp {
	this := SmartsheetGetRecordsRsp{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *SmartsheetGetRecordsRsp) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetGetRecordsRsp) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *SmartsheetGetRecordsRsp) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *SmartsheetGetRecordsRsp) SetTotal(v int32) {
	o.Total = &v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *SmartsheetGetRecordsRsp) GetHasMore() bool {
	if o == nil || o.HasMore == nil {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetGetRecordsRsp) GetHasMoreOk() (*bool, bool) {
	if o == nil || o.HasMore == nil {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *SmartsheetGetRecordsRsp) HasHasMore() bool {
	if o != nil && o.HasMore != nil {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *SmartsheetGetRecordsRsp) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *SmartsheetGetRecordsRsp) GetNext() int32 {
	if o == nil || o.Next == nil {
		var ret int32
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetGetRecordsRsp) GetNextOk() (*int32, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *SmartsheetGetRecordsRsp) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given int32 and assigns it to the Next field.
func (o *SmartsheetGetRecordsRsp) SetNext(v int32) {
	o.Next = &v
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *SmartsheetGetRecordsRsp) GetRecords() []SmartsheetRecord {
	if o == nil || o.Records == nil {
		var ret []SmartsheetRecord
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetGetRecordsRsp) GetRecordsOk() ([]SmartsheetRecord, bool) {
	if o == nil || o.Records == nil {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *SmartsheetGetRecordsRsp) HasRecords() bool {
	if o != nil && o.Records != nil {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []SmartsheetRecord and assigns it to the Records field.
func (o *SmartsheetGetRecordsRsp) SetRecords(v []SmartsheetRecord) {
	o.Records = v
}

func (o SmartsheetGetRecordsRsp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.HasMore != nil {
		toSerialize["hasMore"] = o.HasMore
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Records != nil {
		toSerialize["records"] = o.Records
	}
	return json.Marshal(toSerialize)
}

type NullableSmartsheetGetRecordsRsp struct {
	value *SmartsheetGetRecordsRsp
	isSet bool
}

func (v NullableSmartsheetGetRecordsRsp) Get() *SmartsheetGetRecordsRsp {
	return v.value
}

func (v *NullableSmartsheetGetRecordsRsp) Set(val *SmartsheetGetRecordsRsp) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartsheetGetRecordsRsp) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartsheetGetRecordsRsp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartsheetGetRecordsRsp(val *SmartsheetGetRecordsRsp) *NullableSmartsheetGetRecordsRsp {
	return &NullableSmartsheetGetRecordsRsp{value: val, isSet: true}
}

func (v NullableSmartsheetGetRecordsRsp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartsheetGetRecordsRsp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupSpec GroupSpec 用于视图的字段分组，类似于mysql中的group
type GroupSpec struct {
	Var1 []Group `json:"1,omitempty"`
}

// NewGroupSpec instantiates a new GroupSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupSpec() *GroupSpec {
	this := GroupSpec{}
	return &this
}

// NewGroupSpecWithDefaults instantiates a new GroupSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupSpecWithDefaults() *GroupSpec {
	this := GroupSpec{}
	return &this
}

// GetVar1 returns the Var1 field value if set, zero value otherwise.
func (o *GroupSpec) GetVar1() []Group {
	if o == nil || o.Var1 == nil {
		var ret []Group
		return ret
	}
	return o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSpec) GetVar1Ok() ([]Group, bool) {
	if o == nil || o.Var1 == nil {
		return nil, false
	}
	return o.Var1, true
}

// HasVar1 returns a boolean if a field has been set.
func (o *GroupSpec) HasVar1() bool {
	if o != nil && o.Var1 != nil {
		return true
	}

	return false
}

// SetVar1 gets a reference to the given []Group and assigns it to the Var1 field.
func (o *GroupSpec) SetVar1(v []Group) {
	o.Var1 = v
}

func (o GroupSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var1 != nil {
		toSerialize["1"] = o.Var1
	}
	return json.Marshal(toSerialize)
}

type NullableGroupSpec struct {
	value *GroupSpec
	isSet bool
}

func (v NullableGroupSpec) Get() *GroupSpec {
	return v.value
}

func (v *NullableGroupSpec) Set(val *GroupSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupSpec(val *GroupSpec) *NullableGroupSpec {
	return &NullableGroupSpec{value: val, isSet: true}
}

func (v NullableGroupSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



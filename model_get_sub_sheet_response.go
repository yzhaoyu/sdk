/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com/open/wiki); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetSubSheetResponse GetSubSheetResponse 查询 Smartsheet 子表信息响应
type GetSubSheetResponse struct {
	GetSheet []SheetData `json:"getSheet,omitempty"`
}

// NewGetSubSheetResponse instantiates a new GetSubSheetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSubSheetResponse() *GetSubSheetResponse {
	this := GetSubSheetResponse{}
	return &this
}

// NewGetSubSheetResponseWithDefaults instantiates a new GetSubSheetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSubSheetResponseWithDefaults() *GetSubSheetResponse {
	this := GetSubSheetResponse{}
	return &this
}

// GetGetSheet returns the GetSheet field value if set, zero value otherwise.
func (o *GetSubSheetResponse) GetGetSheet() []SheetData {
	if o == nil || o.GetSheet == nil {
		var ret []SheetData
		return ret
	}
	return o.GetSheet
}

// GetGetSheetOk returns a tuple with the GetSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubSheetResponse) GetGetSheetOk() ([]SheetData, bool) {
	if o == nil || o.GetSheet == nil {
		return nil, false
	}
	return o.GetSheet, true
}

// HasGetSheet returns a boolean if a field has been set.
func (o *GetSubSheetResponse) HasGetSheet() bool {
	if o != nil && o.GetSheet != nil {
		return true
	}

	return false
}

// SetGetSheet gets a reference to the given []SheetData and assigns it to the GetSheet field.
func (o *GetSubSheetResponse) SetGetSheet(v []SheetData) {
	o.GetSheet = v
}

func (o GetSubSheetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GetSheet != nil {
		toSerialize["getSheet"] = o.GetSheet
	}
	return json.Marshal(toSerialize)
}

type NullableGetSubSheetResponse struct {
	value *GetSubSheetResponse
	isSet bool
}

func (v NullableGetSubSheetResponse) Get() *GetSubSheetResponse {
	return v.value
}

func (v *NullableGetSubSheetResponse) Set(val *GetSubSheetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSubSheetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSubSheetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSubSheetResponse(val *GetSubSheetResponse) *NullableGetSubSheetResponse {
	return &NullableGetSubSheetResponse{value: val, isSet: true}
}

func (v NullableGetSubSheetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSubSheetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



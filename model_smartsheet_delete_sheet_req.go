/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com/open/wiki); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmartsheetDeleteSheetReq struct for SmartsheetDeleteSheetReq
type SmartsheetDeleteSheetReq struct {
	SheetID *string `json:"sheetID,omitempty"`
}

// NewSmartsheetDeleteSheetReq instantiates a new SmartsheetDeleteSheetReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartsheetDeleteSheetReq() *SmartsheetDeleteSheetReq {
	this := SmartsheetDeleteSheetReq{}
	return &this
}

// NewSmartsheetDeleteSheetReqWithDefaults instantiates a new SmartsheetDeleteSheetReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartsheetDeleteSheetReqWithDefaults() *SmartsheetDeleteSheetReq {
	this := SmartsheetDeleteSheetReq{}
	return &this
}

// GetSheetID returns the SheetID field value if set, zero value otherwise.
func (o *SmartsheetDeleteSheetReq) GetSheetID() string {
	if o == nil || o.SheetID == nil {
		var ret string
		return ret
	}
	return *o.SheetID
}

// GetSheetIDOk returns a tuple with the SheetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetDeleteSheetReq) GetSheetIDOk() (*string, bool) {
	if o == nil || o.SheetID == nil {
		return nil, false
	}
	return o.SheetID, true
}

// HasSheetID returns a boolean if a field has been set.
func (o *SmartsheetDeleteSheetReq) HasSheetID() bool {
	if o != nil && o.SheetID != nil {
		return true
	}

	return false
}

// SetSheetID gets a reference to the given string and assigns it to the SheetID field.
func (o *SmartsheetDeleteSheetReq) SetSheetID(v string) {
	o.SheetID = &v
}

func (o SmartsheetDeleteSheetReq) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SheetID != nil {
		toSerialize["sheetID"] = o.SheetID
	}
	return json.Marshal(toSerialize)
}

type NullableSmartsheetDeleteSheetReq struct {
	value *SmartsheetDeleteSheetReq
	isSet bool
}

func (v NullableSmartsheetDeleteSheetReq) Get() *SmartsheetDeleteSheetReq {
	return v.value
}

func (v *NullableSmartsheetDeleteSheetReq) Set(val *SmartsheetDeleteSheetReq) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartsheetDeleteSheetReq) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartsheetDeleteSheetReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartsheetDeleteSheetReq(val *SmartsheetDeleteSheetReq) *NullableSmartsheetDeleteSheetReq {
	return &NullableSmartsheetDeleteSheetReq{value: val, isSet: true}
}

func (v NullableSmartsheetDeleteSheetReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartsheetDeleteSheetReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



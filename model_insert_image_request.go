/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com/open/wiki); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InsertImageRequest struct for InsertImageRequest
type InsertImageRequest struct {
	// 图片 ID
	ImageID string `json:"imageID"`
	Location Location `json:"location"`
	// 图片宽度, 单位为 emu
	Width *int32 `json:"width,omitempty"`
	// 图片高度, 单位为 emu
	Height *int32 `json:"height,omitempty"`
	// 业务来源
	AddonSource *string `json:"addonSource,omitempty"`
	// 插件ID
	AddonID *string `json:"addonID,omitempty"`
	// 文档插件元素的唯一 ID (6位的数字小写字母组合)
	AnchorID *string `json:"anchorID,omitempty"`
	// 插件扩展字段
	ExtraData *string `json:"extraData,omitempty"`
}

// NewInsertImageRequest instantiates a new InsertImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsertImageRequest(imageID string, location Location) *InsertImageRequest {
	this := InsertImageRequest{}
	this.ImageID = imageID
	this.Location = location
	return &this
}

// NewInsertImageRequestWithDefaults instantiates a new InsertImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsertImageRequestWithDefaults() *InsertImageRequest {
	this := InsertImageRequest{}
	return &this
}

// GetImageID returns the ImageID field value
func (o *InsertImageRequest) GetImageID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageID
}

// GetImageIDOk returns a tuple with the ImageID field value
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetImageIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageID, true
}

// SetImageID sets field value
func (o *InsertImageRequest) SetImageID(v string) {
	o.ImageID = v
}

// GetLocation returns the Location field value
func (o *InsertImageRequest) GetLocation() Location {
	if o == nil {
		var ret Location
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetLocationOk() (*Location, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *InsertImageRequest) SetLocation(v Location) {
	o.Location = v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *InsertImageRequest) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetWidthOk() (*int32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *InsertImageRequest) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *InsertImageRequest) SetWidth(v int32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *InsertImageRequest) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetHeightOk() (*int32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *InsertImageRequest) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *InsertImageRequest) SetHeight(v int32) {
	o.Height = &v
}

// GetAddonSource returns the AddonSource field value if set, zero value otherwise.
func (o *InsertImageRequest) GetAddonSource() string {
	if o == nil || o.AddonSource == nil {
		var ret string
		return ret
	}
	return *o.AddonSource
}

// GetAddonSourceOk returns a tuple with the AddonSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetAddonSourceOk() (*string, bool) {
	if o == nil || o.AddonSource == nil {
		return nil, false
	}
	return o.AddonSource, true
}

// HasAddonSource returns a boolean if a field has been set.
func (o *InsertImageRequest) HasAddonSource() bool {
	if o != nil && o.AddonSource != nil {
		return true
	}

	return false
}

// SetAddonSource gets a reference to the given string and assigns it to the AddonSource field.
func (o *InsertImageRequest) SetAddonSource(v string) {
	o.AddonSource = &v
}

// GetAddonID returns the AddonID field value if set, zero value otherwise.
func (o *InsertImageRequest) GetAddonID() string {
	if o == nil || o.AddonID == nil {
		var ret string
		return ret
	}
	return *o.AddonID
}

// GetAddonIDOk returns a tuple with the AddonID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetAddonIDOk() (*string, bool) {
	if o == nil || o.AddonID == nil {
		return nil, false
	}
	return o.AddonID, true
}

// HasAddonID returns a boolean if a field has been set.
func (o *InsertImageRequest) HasAddonID() bool {
	if o != nil && o.AddonID != nil {
		return true
	}

	return false
}

// SetAddonID gets a reference to the given string and assigns it to the AddonID field.
func (o *InsertImageRequest) SetAddonID(v string) {
	o.AddonID = &v
}

// GetAnchorID returns the AnchorID field value if set, zero value otherwise.
func (o *InsertImageRequest) GetAnchorID() string {
	if o == nil || o.AnchorID == nil {
		var ret string
		return ret
	}
	return *o.AnchorID
}

// GetAnchorIDOk returns a tuple with the AnchorID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetAnchorIDOk() (*string, bool) {
	if o == nil || o.AnchorID == nil {
		return nil, false
	}
	return o.AnchorID, true
}

// HasAnchorID returns a boolean if a field has been set.
func (o *InsertImageRequest) HasAnchorID() bool {
	if o != nil && o.AnchorID != nil {
		return true
	}

	return false
}

// SetAnchorID gets a reference to the given string and assigns it to the AnchorID field.
func (o *InsertImageRequest) SetAnchorID(v string) {
	o.AnchorID = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise.
func (o *InsertImageRequest) GetExtraData() string {
	if o == nil || o.ExtraData == nil {
		var ret string
		return ret
	}
	return *o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertImageRequest) GetExtraDataOk() (*string, bool) {
	if o == nil || o.ExtraData == nil {
		return nil, false
	}
	return o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *InsertImageRequest) HasExtraData() bool {
	if o != nil && o.ExtraData != nil {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given string and assigns it to the ExtraData field.
func (o *InsertImageRequest) SetExtraData(v string) {
	o.ExtraData = &v
}

func (o InsertImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageID"] = o.ImageID
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.AddonSource != nil {
		toSerialize["addonSource"] = o.AddonSource
	}
	if o.AddonID != nil {
		toSerialize["addonID"] = o.AddonID
	}
	if o.AnchorID != nil {
		toSerialize["anchorID"] = o.AnchorID
	}
	if o.ExtraData != nil {
		toSerialize["extraData"] = o.ExtraData
	}
	return json.Marshal(toSerialize)
}

type NullableInsertImageRequest struct {
	value *InsertImageRequest
	isSet bool
}

func (v NullableInsertImageRequest) Get() *InsertImageRequest {
	return v.value
}

func (v *NullableInsertImageRequest) Set(val *InsertImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInsertImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInsertImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsertImageRequest(val *InsertImageRequest) *NullableInsertImageRequest {
	return &NullableInsertImageRequest{value: val, isSet: true}
}

func (v NullableInsertImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsertImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



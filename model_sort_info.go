/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SortInfo struct for SortInfo
type SortInfo struct {
	Var1 *string `json:"1,omitempty"`
	Var2 *bool `json:"2,omitempty"`
}

// NewSortInfo instantiates a new SortInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSortInfo() *SortInfo {
	this := SortInfo{}
	return &this
}

// NewSortInfoWithDefaults instantiates a new SortInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortInfoWithDefaults() *SortInfo {
	this := SortInfo{}
	return &this
}

// GetVar1 returns the Var1 field value if set, zero value otherwise.
func (o *SortInfo) GetVar1() string {
	if o == nil || o.Var1 == nil {
		var ret string
		return ret
	}
	return *o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortInfo) GetVar1Ok() (*string, bool) {
	if o == nil || o.Var1 == nil {
		return nil, false
	}
	return o.Var1, true
}

// HasVar1 returns a boolean if a field has been set.
func (o *SortInfo) HasVar1() bool {
	if o != nil && o.Var1 != nil {
		return true
	}

	return false
}

// SetVar1 gets a reference to the given string and assigns it to the Var1 field.
func (o *SortInfo) SetVar1(v string) {
	o.Var1 = &v
}

// GetVar2 returns the Var2 field value if set, zero value otherwise.
func (o *SortInfo) GetVar2() bool {
	if o == nil || o.Var2 == nil {
		var ret bool
		return ret
	}
	return *o.Var2
}

// GetVar2Ok returns a tuple with the Var2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortInfo) GetVar2Ok() (*bool, bool) {
	if o == nil || o.Var2 == nil {
		return nil, false
	}
	return o.Var2, true
}

// HasVar2 returns a boolean if a field has been set.
func (o *SortInfo) HasVar2() bool {
	if o != nil && o.Var2 != nil {
		return true
	}

	return false
}

// SetVar2 gets a reference to the given bool and assigns it to the Var2 field.
func (o *SortInfo) SetVar2(v bool) {
	o.Var2 = &v
}

func (o SortInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var1 != nil {
		toSerialize["1"] = o.Var1
	}
	if o.Var2 != nil {
		toSerialize["2"] = o.Var2
	}
	return json.Marshal(toSerialize)
}

type NullableSortInfo struct {
	value *SortInfo
	isSet bool
}

func (v NullableSortInfo) Get() *SortInfo {
	return v.value
}

func (v *NullableSortInfo) Set(val *SortInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSortInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSortInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSortInfo(val *SortInfo) *NullableSortInfo {
	return &NullableSortInfo{value: val, isSet: true}
}

func (v NullableSortInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSortInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



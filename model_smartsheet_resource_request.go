/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmartsheetResourceRequest SmartsheetResourceRequest 处理 Smartsheet 视图、记录、字段资源的请求参数
type SmartsheetResourceRequest struct {
	FileID string `json:"fileID"`
	SheetID string `json:"sheetID"`
	GetViews *SmartsheetGetViewsRequest `json:"getViews,omitempty"`
	GetRecords *SmartsheetGetRecordsRequest `json:"getRecords,omitempty"`
	GetFields *SmartsheetGetFieldsRequest `json:"getFields,omitempty"`
	AddView *SmartsheetAddViewRequest `json:"addView,omitempty"`
	DeleteViews *SmartsheetDeleteViewsRequest `json:"deleteViews,omitempty"`
	AddRecords *SmartsheetAddRecordsRequest `json:"addRecords,omitempty"`
	UpdateRecords *SmartsheetUpdateRecordsRequest `json:"updateRecords,omitempty"`
	DeleteRecords *SmartsheetDeleteRecordsRequest `json:"deleteRecords,omitempty"`
	AddFields *SmartsheetAddFieldsRequest `json:"addFields,omitempty"`
	UpdateFields *SmartsheetUpdateFieldsRequest `json:"updateFields,omitempty"`
	DeleteFields *SmartsheetDeleteFieldsRequest `json:"deleteFields,omitempty"`
}

// NewSmartsheetResourceRequest instantiates a new SmartsheetResourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartsheetResourceRequest(fileID string, sheetID string) *SmartsheetResourceRequest {
	this := SmartsheetResourceRequest{}
	this.FileID = fileID
	this.SheetID = sheetID
	return &this
}

// NewSmartsheetResourceRequestWithDefaults instantiates a new SmartsheetResourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartsheetResourceRequestWithDefaults() *SmartsheetResourceRequest {
	this := SmartsheetResourceRequest{}
	return &this
}

// GetFileID returns the FileID field value
func (o *SmartsheetResourceRequest) GetFileID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileID
}

// GetFileIDOk returns a tuple with the FileID field value
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetFileIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileID, true
}

// SetFileID sets field value
func (o *SmartsheetResourceRequest) SetFileID(v string) {
	o.FileID = v
}

// GetSheetID returns the SheetID field value
func (o *SmartsheetResourceRequest) GetSheetID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SheetID
}

// GetSheetIDOk returns a tuple with the SheetID field value
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetSheetIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SheetID, true
}

// SetSheetID sets field value
func (o *SmartsheetResourceRequest) SetSheetID(v string) {
	o.SheetID = v
}

// GetGetViews returns the GetViews field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetGetViews() SmartsheetGetViewsRequest {
	if o == nil || o.GetViews == nil {
		var ret SmartsheetGetViewsRequest
		return ret
	}
	return *o.GetViews
}

// GetGetViewsOk returns a tuple with the GetViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetGetViewsOk() (*SmartsheetGetViewsRequest, bool) {
	if o == nil || o.GetViews == nil {
		return nil, false
	}
	return o.GetViews, true
}

// HasGetViews returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasGetViews() bool {
	if o != nil && o.GetViews != nil {
		return true
	}

	return false
}

// SetGetViews gets a reference to the given SmartsheetGetViewsRequest and assigns it to the GetViews field.
func (o *SmartsheetResourceRequest) SetGetViews(v SmartsheetGetViewsRequest) {
	o.GetViews = &v
}

// GetGetRecords returns the GetRecords field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetGetRecords() SmartsheetGetRecordsRequest {
	if o == nil || o.GetRecords == nil {
		var ret SmartsheetGetRecordsRequest
		return ret
	}
	return *o.GetRecords
}

// GetGetRecordsOk returns a tuple with the GetRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetGetRecordsOk() (*SmartsheetGetRecordsRequest, bool) {
	if o == nil || o.GetRecords == nil {
		return nil, false
	}
	return o.GetRecords, true
}

// HasGetRecords returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasGetRecords() bool {
	if o != nil && o.GetRecords != nil {
		return true
	}

	return false
}

// SetGetRecords gets a reference to the given SmartsheetGetRecordsRequest and assigns it to the GetRecords field.
func (o *SmartsheetResourceRequest) SetGetRecords(v SmartsheetGetRecordsRequest) {
	o.GetRecords = &v
}

// GetGetFields returns the GetFields field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetGetFields() SmartsheetGetFieldsRequest {
	if o == nil || o.GetFields == nil {
		var ret SmartsheetGetFieldsRequest
		return ret
	}
	return *o.GetFields
}

// GetGetFieldsOk returns a tuple with the GetFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetGetFieldsOk() (*SmartsheetGetFieldsRequest, bool) {
	if o == nil || o.GetFields == nil {
		return nil, false
	}
	return o.GetFields, true
}

// HasGetFields returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasGetFields() bool {
	if o != nil && o.GetFields != nil {
		return true
	}

	return false
}

// SetGetFields gets a reference to the given SmartsheetGetFieldsRequest and assigns it to the GetFields field.
func (o *SmartsheetResourceRequest) SetGetFields(v SmartsheetGetFieldsRequest) {
	o.GetFields = &v
}

// GetAddView returns the AddView field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetAddView() SmartsheetAddViewRequest {
	if o == nil || o.AddView == nil {
		var ret SmartsheetAddViewRequest
		return ret
	}
	return *o.AddView
}

// GetAddViewOk returns a tuple with the AddView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetAddViewOk() (*SmartsheetAddViewRequest, bool) {
	if o == nil || o.AddView == nil {
		return nil, false
	}
	return o.AddView, true
}

// HasAddView returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasAddView() bool {
	if o != nil && o.AddView != nil {
		return true
	}

	return false
}

// SetAddView gets a reference to the given SmartsheetAddViewRequest and assigns it to the AddView field.
func (o *SmartsheetResourceRequest) SetAddView(v SmartsheetAddViewRequest) {
	o.AddView = &v
}

// GetDeleteViews returns the DeleteViews field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetDeleteViews() SmartsheetDeleteViewsRequest {
	if o == nil || o.DeleteViews == nil {
		var ret SmartsheetDeleteViewsRequest
		return ret
	}
	return *o.DeleteViews
}

// GetDeleteViewsOk returns a tuple with the DeleteViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetDeleteViewsOk() (*SmartsheetDeleteViewsRequest, bool) {
	if o == nil || o.DeleteViews == nil {
		return nil, false
	}
	return o.DeleteViews, true
}

// HasDeleteViews returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasDeleteViews() bool {
	if o != nil && o.DeleteViews != nil {
		return true
	}

	return false
}

// SetDeleteViews gets a reference to the given SmartsheetDeleteViewsRequest and assigns it to the DeleteViews field.
func (o *SmartsheetResourceRequest) SetDeleteViews(v SmartsheetDeleteViewsRequest) {
	o.DeleteViews = &v
}

// GetAddRecords returns the AddRecords field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetAddRecords() SmartsheetAddRecordsRequest {
	if o == nil || o.AddRecords == nil {
		var ret SmartsheetAddRecordsRequest
		return ret
	}
	return *o.AddRecords
}

// GetAddRecordsOk returns a tuple with the AddRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetAddRecordsOk() (*SmartsheetAddRecordsRequest, bool) {
	if o == nil || o.AddRecords == nil {
		return nil, false
	}
	return o.AddRecords, true
}

// HasAddRecords returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasAddRecords() bool {
	if o != nil && o.AddRecords != nil {
		return true
	}

	return false
}

// SetAddRecords gets a reference to the given SmartsheetAddRecordsRequest and assigns it to the AddRecords field.
func (o *SmartsheetResourceRequest) SetAddRecords(v SmartsheetAddRecordsRequest) {
	o.AddRecords = &v
}

// GetUpdateRecords returns the UpdateRecords field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetUpdateRecords() SmartsheetUpdateRecordsRequest {
	if o == nil || o.UpdateRecords == nil {
		var ret SmartsheetUpdateRecordsRequest
		return ret
	}
	return *o.UpdateRecords
}

// GetUpdateRecordsOk returns a tuple with the UpdateRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetUpdateRecordsOk() (*SmartsheetUpdateRecordsRequest, bool) {
	if o == nil || o.UpdateRecords == nil {
		return nil, false
	}
	return o.UpdateRecords, true
}

// HasUpdateRecords returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasUpdateRecords() bool {
	if o != nil && o.UpdateRecords != nil {
		return true
	}

	return false
}

// SetUpdateRecords gets a reference to the given SmartsheetUpdateRecordsRequest and assigns it to the UpdateRecords field.
func (o *SmartsheetResourceRequest) SetUpdateRecords(v SmartsheetUpdateRecordsRequest) {
	o.UpdateRecords = &v
}

// GetDeleteRecords returns the DeleteRecords field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetDeleteRecords() SmartsheetDeleteRecordsRequest {
	if o == nil || o.DeleteRecords == nil {
		var ret SmartsheetDeleteRecordsRequest
		return ret
	}
	return *o.DeleteRecords
}

// GetDeleteRecordsOk returns a tuple with the DeleteRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetDeleteRecordsOk() (*SmartsheetDeleteRecordsRequest, bool) {
	if o == nil || o.DeleteRecords == nil {
		return nil, false
	}
	return o.DeleteRecords, true
}

// HasDeleteRecords returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasDeleteRecords() bool {
	if o != nil && o.DeleteRecords != nil {
		return true
	}

	return false
}

// SetDeleteRecords gets a reference to the given SmartsheetDeleteRecordsRequest and assigns it to the DeleteRecords field.
func (o *SmartsheetResourceRequest) SetDeleteRecords(v SmartsheetDeleteRecordsRequest) {
	o.DeleteRecords = &v
}

// GetAddFields returns the AddFields field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetAddFields() SmartsheetAddFieldsRequest {
	if o == nil || o.AddFields == nil {
		var ret SmartsheetAddFieldsRequest
		return ret
	}
	return *o.AddFields
}

// GetAddFieldsOk returns a tuple with the AddFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetAddFieldsOk() (*SmartsheetAddFieldsRequest, bool) {
	if o == nil || o.AddFields == nil {
		return nil, false
	}
	return o.AddFields, true
}

// HasAddFields returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasAddFields() bool {
	if o != nil && o.AddFields != nil {
		return true
	}

	return false
}

// SetAddFields gets a reference to the given SmartsheetAddFieldsRequest and assigns it to the AddFields field.
func (o *SmartsheetResourceRequest) SetAddFields(v SmartsheetAddFieldsRequest) {
	o.AddFields = &v
}

// GetUpdateFields returns the UpdateFields field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetUpdateFields() SmartsheetUpdateFieldsRequest {
	if o == nil || o.UpdateFields == nil {
		var ret SmartsheetUpdateFieldsRequest
		return ret
	}
	return *o.UpdateFields
}

// GetUpdateFieldsOk returns a tuple with the UpdateFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetUpdateFieldsOk() (*SmartsheetUpdateFieldsRequest, bool) {
	if o == nil || o.UpdateFields == nil {
		return nil, false
	}
	return o.UpdateFields, true
}

// HasUpdateFields returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasUpdateFields() bool {
	if o != nil && o.UpdateFields != nil {
		return true
	}

	return false
}

// SetUpdateFields gets a reference to the given SmartsheetUpdateFieldsRequest and assigns it to the UpdateFields field.
func (o *SmartsheetResourceRequest) SetUpdateFields(v SmartsheetUpdateFieldsRequest) {
	o.UpdateFields = &v
}

// GetDeleteFields returns the DeleteFields field value if set, zero value otherwise.
func (o *SmartsheetResourceRequest) GetDeleteFields() SmartsheetDeleteFieldsRequest {
	if o == nil || o.DeleteFields == nil {
		var ret SmartsheetDeleteFieldsRequest
		return ret
	}
	return *o.DeleteFields
}

// GetDeleteFieldsOk returns a tuple with the DeleteFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetResourceRequest) GetDeleteFieldsOk() (*SmartsheetDeleteFieldsRequest, bool) {
	if o == nil || o.DeleteFields == nil {
		return nil, false
	}
	return o.DeleteFields, true
}

// HasDeleteFields returns a boolean if a field has been set.
func (o *SmartsheetResourceRequest) HasDeleteFields() bool {
	if o != nil && o.DeleteFields != nil {
		return true
	}

	return false
}

// SetDeleteFields gets a reference to the given SmartsheetDeleteFieldsRequest and assigns it to the DeleteFields field.
func (o *SmartsheetResourceRequest) SetDeleteFields(v SmartsheetDeleteFieldsRequest) {
	o.DeleteFields = &v
}

func (o SmartsheetResourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fileID"] = o.FileID
	}
	if true {
		toSerialize["sheetID"] = o.SheetID
	}
	if o.GetViews != nil {
		toSerialize["getViews"] = o.GetViews
	}
	if o.GetRecords != nil {
		toSerialize["getRecords"] = o.GetRecords
	}
	if o.GetFields != nil {
		toSerialize["getFields"] = o.GetFields
	}
	if o.AddView != nil {
		toSerialize["addView"] = o.AddView
	}
	if o.DeleteViews != nil {
		toSerialize["deleteViews"] = o.DeleteViews
	}
	if o.AddRecords != nil {
		toSerialize["addRecords"] = o.AddRecords
	}
	if o.UpdateRecords != nil {
		toSerialize["updateRecords"] = o.UpdateRecords
	}
	if o.DeleteRecords != nil {
		toSerialize["deleteRecords"] = o.DeleteRecords
	}
	if o.AddFields != nil {
		toSerialize["addFields"] = o.AddFields
	}
	if o.UpdateFields != nil {
		toSerialize["updateFields"] = o.UpdateFields
	}
	if o.DeleteFields != nil {
		toSerialize["deleteFields"] = o.DeleteFields
	}
	return json.Marshal(toSerialize)
}

type NullableSmartsheetResourceRequest struct {
	value *SmartsheetResourceRequest
	isSet bool
}

func (v NullableSmartsheetResourceRequest) Get() *SmartsheetResourceRequest {
	return v.value
}

func (v *NullableSmartsheetResourceRequest) Set(val *SmartsheetResourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartsheetResourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartsheetResourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartsheetResourceRequest(val *SmartsheetResourceRequest) *NullableSmartsheetResourceRequest {
	return &NullableSmartsheetResourceRequest{value: val, isSet: true}
}

func (v NullableSmartsheetResourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartsheetResourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CheckboxFieldProperty struct for CheckboxFieldProperty
type CheckboxFieldProperty struct {
	Checked *bool `json:"checked,omitempty"`
}

// NewCheckboxFieldProperty instantiates a new CheckboxFieldProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckboxFieldProperty() *CheckboxFieldProperty {
	this := CheckboxFieldProperty{}
	return &this
}

// NewCheckboxFieldPropertyWithDefaults instantiates a new CheckboxFieldProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckboxFieldPropertyWithDefaults() *CheckboxFieldProperty {
	this := CheckboxFieldProperty{}
	return &this
}

// GetChecked returns the Checked field value if set, zero value otherwise.
func (o *CheckboxFieldProperty) GetChecked() bool {
	if o == nil || o.Checked == nil {
		var ret bool
		return ret
	}
	return *o.Checked
}

// GetCheckedOk returns a tuple with the Checked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckboxFieldProperty) GetCheckedOk() (*bool, bool) {
	if o == nil || o.Checked == nil {
		return nil, false
	}
	return o.Checked, true
}

// HasChecked returns a boolean if a field has been set.
func (o *CheckboxFieldProperty) HasChecked() bool {
	if o != nil && o.Checked != nil {
		return true
	}

	return false
}

// SetChecked gets a reference to the given bool and assigns it to the Checked field.
func (o *CheckboxFieldProperty) SetChecked(v bool) {
	o.Checked = &v
}

func (o CheckboxFieldProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Checked != nil {
		toSerialize["checked"] = o.Checked
	}
	return json.Marshal(toSerialize)
}

type NullableCheckboxFieldProperty struct {
	value *CheckboxFieldProperty
	isSet bool
}

func (v NullableCheckboxFieldProperty) Get() *CheckboxFieldProperty {
	return v.value
}

func (v *NullableCheckboxFieldProperty) Set(val *CheckboxFieldProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckboxFieldProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckboxFieldProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckboxFieldProperty(val *CheckboxFieldProperty) *NullableCheckboxFieldProperty {
	return &NullableCheckboxFieldProperty{value: val, isSet: true}
}

func (v NullableCheckboxFieldProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckboxFieldProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



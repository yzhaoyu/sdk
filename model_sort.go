/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Sort struct for Sort
type Sort struct {
	FieldTitle *string `json:"fieldTitle,omitempty"`
	Desc *bool `json:"desc,omitempty"`
}

// NewSort instantiates a new Sort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSort() *Sort {
	this := Sort{}
	return &this
}

// NewSortWithDefaults instantiates a new Sort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortWithDefaults() *Sort {
	this := Sort{}
	return &this
}

// GetFieldTitle returns the FieldTitle field value if set, zero value otherwise.
func (o *Sort) GetFieldTitle() string {
	if o == nil || o.FieldTitle == nil {
		var ret string
		return ret
	}
	return *o.FieldTitle
}

// GetFieldTitleOk returns a tuple with the FieldTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sort) GetFieldTitleOk() (*string, bool) {
	if o == nil || o.FieldTitle == nil {
		return nil, false
	}
	return o.FieldTitle, true
}

// HasFieldTitle returns a boolean if a field has been set.
func (o *Sort) HasFieldTitle() bool {
	if o != nil && o.FieldTitle != nil {
		return true
	}

	return false
}

// SetFieldTitle gets a reference to the given string and assigns it to the FieldTitle field.
func (o *Sort) SetFieldTitle(v string) {
	o.FieldTitle = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *Sort) GetDesc() bool {
	if o == nil || o.Desc == nil {
		var ret bool
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sort) GetDescOk() (*bool, bool) {
	if o == nil || o.Desc == nil {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *Sort) HasDesc() bool {
	if o != nil && o.Desc != nil {
		return true
	}

	return false
}

// SetDesc gets a reference to the given bool and assigns it to the Desc field.
func (o *Sort) SetDesc(v bool) {
	o.Desc = &v
}

func (o Sort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldTitle != nil {
		toSerialize["fieldTitle"] = o.FieldTitle
	}
	if o.Desc != nil {
		toSerialize["desc"] = o.Desc
	}
	return json.Marshal(toSerialize)
}

type NullableSort struct {
	value *Sort
	isSet bool
}

func (v NullableSort) Get() *Sort {
	return v.value
}

func (v *NullableSort) Set(val *Sort) {
	v.value = val
	v.isSet = true
}

func (v NullableSort) IsSet() bool {
	return v.isSet
}

func (v *NullableSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSort(val *Sort) *NullableSort {
	return &NullableSort{value: val, isSet: true}
}

func (v NullableSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



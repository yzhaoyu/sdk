/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UrlFieldProperty struct for UrlFieldProperty
type UrlFieldProperty struct {
	Type *int32 `json:"type,omitempty"`
}

// NewUrlFieldProperty instantiates a new UrlFieldProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlFieldProperty() *UrlFieldProperty {
	this := UrlFieldProperty{}
	return &this
}

// NewUrlFieldPropertyWithDefaults instantiates a new UrlFieldProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlFieldPropertyWithDefaults() *UrlFieldProperty {
	this := UrlFieldProperty{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UrlFieldProperty) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlFieldProperty) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UrlFieldProperty) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *UrlFieldProperty) SetType(v int32) {
	o.Type = &v
}

func (o UrlFieldProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableUrlFieldProperty struct {
	value *UrlFieldProperty
	isSet bool
}

func (v NullableUrlFieldProperty) Get() *UrlFieldProperty {
	return v.value
}

func (v *NullableUrlFieldProperty) Set(val *UrlFieldProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlFieldProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlFieldProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlFieldProperty(val *UrlFieldProperty) *NullableUrlFieldProperty {
	return &NullableUrlFieldProperty{value: val, isSet: true}
}

func (v NullableUrlFieldProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlFieldProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



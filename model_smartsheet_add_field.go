/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmartsheetAddField struct for SmartsheetAddField
type SmartsheetAddField struct {
	FieldTitle *string `json:"fieldTitle,omitempty"`
	FieldType *string `json:"fieldType,omitempty"`
	PropertyText map[string]interface{} `json:"propertyText,omitempty"`
	PropertyNumber *SmartsheetNumberFieldProperty `json:"propertyNumber,omitempty"`
	PropertyCheckbox *SmartsheetCheckboxFieldProperty `json:"propertyCheckbox,omitempty"`
	PropertyDateTime *SmartsheetDateTimeFieldProperty `json:"propertyDateTime,omitempty"`
	PropertyImage map[string]interface{} `json:"propertyImage,omitempty"`
	PropertyAttachment map[string]interface{} `json:"propertyAttachment,omitempty"`
	PropertyUser map[string]interface{} `json:"propertyUser,omitempty"`
	PropertyUrl *SmartsheetUrlFieldProperty `json:"propertyUrl,omitempty"`
	PropertySelect *SmartsheetSelectFieldProperty `json:"propertySelect,omitempty"`
	PropertyCreatedUser map[string]interface{} `json:"propertyCreatedUser,omitempty"`
	PropertyModifiedUser map[string]interface{} `json:"propertyModifiedUser,omitempty"`
	PropertyCreatedTime *SmartsheetCreatedTimeFieldProperty `json:"propertyCreatedTime,omitempty"`
	PropertyModifiedTime *SmartsheetModifiedTimeFieldProperty `json:"propertyModifiedTime,omitempty"`
	PropertyProgress *SmartsheetProgressFieldProperty `json:"propertyProgress,omitempty"`
	PropertyPhoneNumber map[string]interface{} `json:"propertyPhoneNumber,omitempty"`
	PropertyEmail map[string]interface{} `json:"propertyEmail,omitempty"`
	PropertySingleSelect *SmartsheetSingleSelectFieldProperty `json:"propertySingleSelect,omitempty"`
}

// NewSmartsheetAddField instantiates a new SmartsheetAddField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartsheetAddField() *SmartsheetAddField {
	this := SmartsheetAddField{}
	return &this
}

// NewSmartsheetAddFieldWithDefaults instantiates a new SmartsheetAddField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartsheetAddFieldWithDefaults() *SmartsheetAddField {
	this := SmartsheetAddField{}
	return &this
}

// GetFieldTitle returns the FieldTitle field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetFieldTitle() string {
	if o == nil || o.FieldTitle == nil {
		var ret string
		return ret
	}
	return *o.FieldTitle
}

// GetFieldTitleOk returns a tuple with the FieldTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetFieldTitleOk() (*string, bool) {
	if o == nil || o.FieldTitle == nil {
		return nil, false
	}
	return o.FieldTitle, true
}

// HasFieldTitle returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasFieldTitle() bool {
	if o != nil && o.FieldTitle != nil {
		return true
	}

	return false
}

// SetFieldTitle gets a reference to the given string and assigns it to the FieldTitle field.
func (o *SmartsheetAddField) SetFieldTitle(v string) {
	o.FieldTitle = &v
}

// GetFieldType returns the FieldType field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetFieldType() string {
	if o == nil || o.FieldType == nil {
		var ret string
		return ret
	}
	return *o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetFieldTypeOk() (*string, bool) {
	if o == nil || o.FieldType == nil {
		return nil, false
	}
	return o.FieldType, true
}

// HasFieldType returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasFieldType() bool {
	if o != nil && o.FieldType != nil {
		return true
	}

	return false
}

// SetFieldType gets a reference to the given string and assigns it to the FieldType field.
func (o *SmartsheetAddField) SetFieldType(v string) {
	o.FieldType = &v
}

// GetPropertyText returns the PropertyText field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyText() map[string]interface{} {
	if o == nil || o.PropertyText == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyText
}

// GetPropertyTextOk returns a tuple with the PropertyText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyTextOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyText == nil {
		return nil, false
	}
	return o.PropertyText, true
}

// HasPropertyText returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyText() bool {
	if o != nil && o.PropertyText != nil {
		return true
	}

	return false
}

// SetPropertyText gets a reference to the given map[string]interface{} and assigns it to the PropertyText field.
func (o *SmartsheetAddField) SetPropertyText(v map[string]interface{}) {
	o.PropertyText = v
}

// GetPropertyNumber returns the PropertyNumber field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyNumber() SmartsheetNumberFieldProperty {
	if o == nil || o.PropertyNumber == nil {
		var ret SmartsheetNumberFieldProperty
		return ret
	}
	return *o.PropertyNumber
}

// GetPropertyNumberOk returns a tuple with the PropertyNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyNumberOk() (*SmartsheetNumberFieldProperty, bool) {
	if o == nil || o.PropertyNumber == nil {
		return nil, false
	}
	return o.PropertyNumber, true
}

// HasPropertyNumber returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyNumber() bool {
	if o != nil && o.PropertyNumber != nil {
		return true
	}

	return false
}

// SetPropertyNumber gets a reference to the given SmartsheetNumberFieldProperty and assigns it to the PropertyNumber field.
func (o *SmartsheetAddField) SetPropertyNumber(v SmartsheetNumberFieldProperty) {
	o.PropertyNumber = &v
}

// GetPropertyCheckbox returns the PropertyCheckbox field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyCheckbox() SmartsheetCheckboxFieldProperty {
	if o == nil || o.PropertyCheckbox == nil {
		var ret SmartsheetCheckboxFieldProperty
		return ret
	}
	return *o.PropertyCheckbox
}

// GetPropertyCheckboxOk returns a tuple with the PropertyCheckbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyCheckboxOk() (*SmartsheetCheckboxFieldProperty, bool) {
	if o == nil || o.PropertyCheckbox == nil {
		return nil, false
	}
	return o.PropertyCheckbox, true
}

// HasPropertyCheckbox returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyCheckbox() bool {
	if o != nil && o.PropertyCheckbox != nil {
		return true
	}

	return false
}

// SetPropertyCheckbox gets a reference to the given SmartsheetCheckboxFieldProperty and assigns it to the PropertyCheckbox field.
func (o *SmartsheetAddField) SetPropertyCheckbox(v SmartsheetCheckboxFieldProperty) {
	o.PropertyCheckbox = &v
}

// GetPropertyDateTime returns the PropertyDateTime field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyDateTime() SmartsheetDateTimeFieldProperty {
	if o == nil || o.PropertyDateTime == nil {
		var ret SmartsheetDateTimeFieldProperty
		return ret
	}
	return *o.PropertyDateTime
}

// GetPropertyDateTimeOk returns a tuple with the PropertyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyDateTimeOk() (*SmartsheetDateTimeFieldProperty, bool) {
	if o == nil || o.PropertyDateTime == nil {
		return nil, false
	}
	return o.PropertyDateTime, true
}

// HasPropertyDateTime returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyDateTime() bool {
	if o != nil && o.PropertyDateTime != nil {
		return true
	}

	return false
}

// SetPropertyDateTime gets a reference to the given SmartsheetDateTimeFieldProperty and assigns it to the PropertyDateTime field.
func (o *SmartsheetAddField) SetPropertyDateTime(v SmartsheetDateTimeFieldProperty) {
	o.PropertyDateTime = &v
}

// GetPropertyImage returns the PropertyImage field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyImage() map[string]interface{} {
	if o == nil || o.PropertyImage == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyImage
}

// GetPropertyImageOk returns a tuple with the PropertyImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyImageOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyImage == nil {
		return nil, false
	}
	return o.PropertyImage, true
}

// HasPropertyImage returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyImage() bool {
	if o != nil && o.PropertyImage != nil {
		return true
	}

	return false
}

// SetPropertyImage gets a reference to the given map[string]interface{} and assigns it to the PropertyImage field.
func (o *SmartsheetAddField) SetPropertyImage(v map[string]interface{}) {
	o.PropertyImage = v
}

// GetPropertyAttachment returns the PropertyAttachment field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyAttachment() map[string]interface{} {
	if o == nil || o.PropertyAttachment == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyAttachment
}

// GetPropertyAttachmentOk returns a tuple with the PropertyAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyAttachmentOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyAttachment == nil {
		return nil, false
	}
	return o.PropertyAttachment, true
}

// HasPropertyAttachment returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyAttachment() bool {
	if o != nil && o.PropertyAttachment != nil {
		return true
	}

	return false
}

// SetPropertyAttachment gets a reference to the given map[string]interface{} and assigns it to the PropertyAttachment field.
func (o *SmartsheetAddField) SetPropertyAttachment(v map[string]interface{}) {
	o.PropertyAttachment = v
}

// GetPropertyUser returns the PropertyUser field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyUser() map[string]interface{} {
	if o == nil || o.PropertyUser == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyUser
}

// GetPropertyUserOk returns a tuple with the PropertyUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyUserOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyUser == nil {
		return nil, false
	}
	return o.PropertyUser, true
}

// HasPropertyUser returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyUser() bool {
	if o != nil && o.PropertyUser != nil {
		return true
	}

	return false
}

// SetPropertyUser gets a reference to the given map[string]interface{} and assigns it to the PropertyUser field.
func (o *SmartsheetAddField) SetPropertyUser(v map[string]interface{}) {
	o.PropertyUser = v
}

// GetPropertyUrl returns the PropertyUrl field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyUrl() SmartsheetUrlFieldProperty {
	if o == nil || o.PropertyUrl == nil {
		var ret SmartsheetUrlFieldProperty
		return ret
	}
	return *o.PropertyUrl
}

// GetPropertyUrlOk returns a tuple with the PropertyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyUrlOk() (*SmartsheetUrlFieldProperty, bool) {
	if o == nil || o.PropertyUrl == nil {
		return nil, false
	}
	return o.PropertyUrl, true
}

// HasPropertyUrl returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyUrl() bool {
	if o != nil && o.PropertyUrl != nil {
		return true
	}

	return false
}

// SetPropertyUrl gets a reference to the given SmartsheetUrlFieldProperty and assigns it to the PropertyUrl field.
func (o *SmartsheetAddField) SetPropertyUrl(v SmartsheetUrlFieldProperty) {
	o.PropertyUrl = &v
}

// GetPropertySelect returns the PropertySelect field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertySelect() SmartsheetSelectFieldProperty {
	if o == nil || o.PropertySelect == nil {
		var ret SmartsheetSelectFieldProperty
		return ret
	}
	return *o.PropertySelect
}

// GetPropertySelectOk returns a tuple with the PropertySelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertySelectOk() (*SmartsheetSelectFieldProperty, bool) {
	if o == nil || o.PropertySelect == nil {
		return nil, false
	}
	return o.PropertySelect, true
}

// HasPropertySelect returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertySelect() bool {
	if o != nil && o.PropertySelect != nil {
		return true
	}

	return false
}

// SetPropertySelect gets a reference to the given SmartsheetSelectFieldProperty and assigns it to the PropertySelect field.
func (o *SmartsheetAddField) SetPropertySelect(v SmartsheetSelectFieldProperty) {
	o.PropertySelect = &v
}

// GetPropertyCreatedUser returns the PropertyCreatedUser field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyCreatedUser() map[string]interface{} {
	if o == nil || o.PropertyCreatedUser == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyCreatedUser
}

// GetPropertyCreatedUserOk returns a tuple with the PropertyCreatedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyCreatedUserOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyCreatedUser == nil {
		return nil, false
	}
	return o.PropertyCreatedUser, true
}

// HasPropertyCreatedUser returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyCreatedUser() bool {
	if o != nil && o.PropertyCreatedUser != nil {
		return true
	}

	return false
}

// SetPropertyCreatedUser gets a reference to the given map[string]interface{} and assigns it to the PropertyCreatedUser field.
func (o *SmartsheetAddField) SetPropertyCreatedUser(v map[string]interface{}) {
	o.PropertyCreatedUser = v
}

// GetPropertyModifiedUser returns the PropertyModifiedUser field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyModifiedUser() map[string]interface{} {
	if o == nil || o.PropertyModifiedUser == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyModifiedUser
}

// GetPropertyModifiedUserOk returns a tuple with the PropertyModifiedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyModifiedUserOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyModifiedUser == nil {
		return nil, false
	}
	return o.PropertyModifiedUser, true
}

// HasPropertyModifiedUser returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyModifiedUser() bool {
	if o != nil && o.PropertyModifiedUser != nil {
		return true
	}

	return false
}

// SetPropertyModifiedUser gets a reference to the given map[string]interface{} and assigns it to the PropertyModifiedUser field.
func (o *SmartsheetAddField) SetPropertyModifiedUser(v map[string]interface{}) {
	o.PropertyModifiedUser = v
}

// GetPropertyCreatedTime returns the PropertyCreatedTime field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyCreatedTime() SmartsheetCreatedTimeFieldProperty {
	if o == nil || o.PropertyCreatedTime == nil {
		var ret SmartsheetCreatedTimeFieldProperty
		return ret
	}
	return *o.PropertyCreatedTime
}

// GetPropertyCreatedTimeOk returns a tuple with the PropertyCreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyCreatedTimeOk() (*SmartsheetCreatedTimeFieldProperty, bool) {
	if o == nil || o.PropertyCreatedTime == nil {
		return nil, false
	}
	return o.PropertyCreatedTime, true
}

// HasPropertyCreatedTime returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyCreatedTime() bool {
	if o != nil && o.PropertyCreatedTime != nil {
		return true
	}

	return false
}

// SetPropertyCreatedTime gets a reference to the given SmartsheetCreatedTimeFieldProperty and assigns it to the PropertyCreatedTime field.
func (o *SmartsheetAddField) SetPropertyCreatedTime(v SmartsheetCreatedTimeFieldProperty) {
	o.PropertyCreatedTime = &v
}

// GetPropertyModifiedTime returns the PropertyModifiedTime field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyModifiedTime() SmartsheetModifiedTimeFieldProperty {
	if o == nil || o.PropertyModifiedTime == nil {
		var ret SmartsheetModifiedTimeFieldProperty
		return ret
	}
	return *o.PropertyModifiedTime
}

// GetPropertyModifiedTimeOk returns a tuple with the PropertyModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyModifiedTimeOk() (*SmartsheetModifiedTimeFieldProperty, bool) {
	if o == nil || o.PropertyModifiedTime == nil {
		return nil, false
	}
	return o.PropertyModifiedTime, true
}

// HasPropertyModifiedTime returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyModifiedTime() bool {
	if o != nil && o.PropertyModifiedTime != nil {
		return true
	}

	return false
}

// SetPropertyModifiedTime gets a reference to the given SmartsheetModifiedTimeFieldProperty and assigns it to the PropertyModifiedTime field.
func (o *SmartsheetAddField) SetPropertyModifiedTime(v SmartsheetModifiedTimeFieldProperty) {
	o.PropertyModifiedTime = &v
}

// GetPropertyProgress returns the PropertyProgress field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyProgress() SmartsheetProgressFieldProperty {
	if o == nil || o.PropertyProgress == nil {
		var ret SmartsheetProgressFieldProperty
		return ret
	}
	return *o.PropertyProgress
}

// GetPropertyProgressOk returns a tuple with the PropertyProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyProgressOk() (*SmartsheetProgressFieldProperty, bool) {
	if o == nil || o.PropertyProgress == nil {
		return nil, false
	}
	return o.PropertyProgress, true
}

// HasPropertyProgress returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyProgress() bool {
	if o != nil && o.PropertyProgress != nil {
		return true
	}

	return false
}

// SetPropertyProgress gets a reference to the given SmartsheetProgressFieldProperty and assigns it to the PropertyProgress field.
func (o *SmartsheetAddField) SetPropertyProgress(v SmartsheetProgressFieldProperty) {
	o.PropertyProgress = &v
}

// GetPropertyPhoneNumber returns the PropertyPhoneNumber field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyPhoneNumber() map[string]interface{} {
	if o == nil || o.PropertyPhoneNumber == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyPhoneNumber
}

// GetPropertyPhoneNumberOk returns a tuple with the PropertyPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyPhoneNumberOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyPhoneNumber == nil {
		return nil, false
	}
	return o.PropertyPhoneNumber, true
}

// HasPropertyPhoneNumber returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyPhoneNumber() bool {
	if o != nil && o.PropertyPhoneNumber != nil {
		return true
	}

	return false
}

// SetPropertyPhoneNumber gets a reference to the given map[string]interface{} and assigns it to the PropertyPhoneNumber field.
func (o *SmartsheetAddField) SetPropertyPhoneNumber(v map[string]interface{}) {
	o.PropertyPhoneNumber = v
}

// GetPropertyEmail returns the PropertyEmail field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertyEmail() map[string]interface{} {
	if o == nil || o.PropertyEmail == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertyEmail
}

// GetPropertyEmailOk returns a tuple with the PropertyEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertyEmailOk() (map[string]interface{}, bool) {
	if o == nil || o.PropertyEmail == nil {
		return nil, false
	}
	return o.PropertyEmail, true
}

// HasPropertyEmail returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertyEmail() bool {
	if o != nil && o.PropertyEmail != nil {
		return true
	}

	return false
}

// SetPropertyEmail gets a reference to the given map[string]interface{} and assigns it to the PropertyEmail field.
func (o *SmartsheetAddField) SetPropertyEmail(v map[string]interface{}) {
	o.PropertyEmail = v
}

// GetPropertySingleSelect returns the PropertySingleSelect field value if set, zero value otherwise.
func (o *SmartsheetAddField) GetPropertySingleSelect() SmartsheetSingleSelectFieldProperty {
	if o == nil || o.PropertySingleSelect == nil {
		var ret SmartsheetSingleSelectFieldProperty
		return ret
	}
	return *o.PropertySingleSelect
}

// GetPropertySingleSelectOk returns a tuple with the PropertySingleSelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetAddField) GetPropertySingleSelectOk() (*SmartsheetSingleSelectFieldProperty, bool) {
	if o == nil || o.PropertySingleSelect == nil {
		return nil, false
	}
	return o.PropertySingleSelect, true
}

// HasPropertySingleSelect returns a boolean if a field has been set.
func (o *SmartsheetAddField) HasPropertySingleSelect() bool {
	if o != nil && o.PropertySingleSelect != nil {
		return true
	}

	return false
}

// SetPropertySingleSelect gets a reference to the given SmartsheetSingleSelectFieldProperty and assigns it to the PropertySingleSelect field.
func (o *SmartsheetAddField) SetPropertySingleSelect(v SmartsheetSingleSelectFieldProperty) {
	o.PropertySingleSelect = &v
}

func (o SmartsheetAddField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldTitle != nil {
		toSerialize["fieldTitle"] = o.FieldTitle
	}
	if o.FieldType != nil {
		toSerialize["fieldType"] = o.FieldType
	}
	if o.PropertyText != nil {
		toSerialize["propertyText"] = o.PropertyText
	}
	if o.PropertyNumber != nil {
		toSerialize["propertyNumber"] = o.PropertyNumber
	}
	if o.PropertyCheckbox != nil {
		toSerialize["propertyCheckbox"] = o.PropertyCheckbox
	}
	if o.PropertyDateTime != nil {
		toSerialize["propertyDateTime"] = o.PropertyDateTime
	}
	if o.PropertyImage != nil {
		toSerialize["propertyImage"] = o.PropertyImage
	}
	if o.PropertyAttachment != nil {
		toSerialize["propertyAttachment"] = o.PropertyAttachment
	}
	if o.PropertyUser != nil {
		toSerialize["propertyUser"] = o.PropertyUser
	}
	if o.PropertyUrl != nil {
		toSerialize["propertyUrl"] = o.PropertyUrl
	}
	if o.PropertySelect != nil {
		toSerialize["propertySelect"] = o.PropertySelect
	}
	if o.PropertyCreatedUser != nil {
		toSerialize["propertyCreatedUser"] = o.PropertyCreatedUser
	}
	if o.PropertyModifiedUser != nil {
		toSerialize["propertyModifiedUser"] = o.PropertyModifiedUser
	}
	if o.PropertyCreatedTime != nil {
		toSerialize["propertyCreatedTime"] = o.PropertyCreatedTime
	}
	if o.PropertyModifiedTime != nil {
		toSerialize["propertyModifiedTime"] = o.PropertyModifiedTime
	}
	if o.PropertyProgress != nil {
		toSerialize["propertyProgress"] = o.PropertyProgress
	}
	if o.PropertyPhoneNumber != nil {
		toSerialize["propertyPhoneNumber"] = o.PropertyPhoneNumber
	}
	if o.PropertyEmail != nil {
		toSerialize["propertyEmail"] = o.PropertyEmail
	}
	if o.PropertySingleSelect != nil {
		toSerialize["propertySingleSelect"] = o.PropertySingleSelect
	}
	return json.Marshal(toSerialize)
}

type NullableSmartsheetAddField struct {
	value *SmartsheetAddField
	isSet bool
}

func (v NullableSmartsheetAddField) Get() *SmartsheetAddField {
	return v.value
}

func (v *NullableSmartsheetAddField) Set(val *SmartsheetAddField) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartsheetAddField) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartsheetAddField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartsheetAddField(val *SmartsheetAddField) *NullableSmartsheetAddField {
	return &NullableSmartsheetAddField{value: val, isSet: true}
}

func (v NullableSmartsheetAddField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartsheetAddField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddViewRequest 新建视图请求，创建一个视图
type AddViewRequest struct {
	ViewTitle *string `json:"viewTitle,omitempty"`
	ViewType *int32 `json:"viewType,omitempty"`
}

// NewAddViewRequest instantiates a new AddViewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddViewRequest() *AddViewRequest {
	this := AddViewRequest{}
	return &this
}

// NewAddViewRequestWithDefaults instantiates a new AddViewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddViewRequestWithDefaults() *AddViewRequest {
	this := AddViewRequest{}
	return &this
}

// GetViewTitle returns the ViewTitle field value if set, zero value otherwise.
func (o *AddViewRequest) GetViewTitle() string {
	if o == nil || o.ViewTitle == nil {
		var ret string
		return ret
	}
	return *o.ViewTitle
}

// GetViewTitleOk returns a tuple with the ViewTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddViewRequest) GetViewTitleOk() (*string, bool) {
	if o == nil || o.ViewTitle == nil {
		return nil, false
	}
	return o.ViewTitle, true
}

// HasViewTitle returns a boolean if a field has been set.
func (o *AddViewRequest) HasViewTitle() bool {
	if o != nil && o.ViewTitle != nil {
		return true
	}

	return false
}

// SetViewTitle gets a reference to the given string and assigns it to the ViewTitle field.
func (o *AddViewRequest) SetViewTitle(v string) {
	o.ViewTitle = &v
}

// GetViewType returns the ViewType field value if set, zero value otherwise.
func (o *AddViewRequest) GetViewType() int32 {
	if o == nil || o.ViewType == nil {
		var ret int32
		return ret
	}
	return *o.ViewType
}

// GetViewTypeOk returns a tuple with the ViewType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddViewRequest) GetViewTypeOk() (*int32, bool) {
	if o == nil || o.ViewType == nil {
		return nil, false
	}
	return o.ViewType, true
}

// HasViewType returns a boolean if a field has been set.
func (o *AddViewRequest) HasViewType() bool {
	if o != nil && o.ViewType != nil {
		return true
	}

	return false
}

// SetViewType gets a reference to the given int32 and assigns it to the ViewType field.
func (o *AddViewRequest) SetViewType(v int32) {
	o.ViewType = &v
}

func (o AddViewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ViewTitle != nil {
		toSerialize["viewTitle"] = o.ViewTitle
	}
	if o.ViewType != nil {
		toSerialize["viewType"] = o.ViewType
	}
	return json.Marshal(toSerialize)
}

type NullableAddViewRequest struct {
	value *AddViewRequest
	isSet bool
}

func (v NullableAddViewRequest) Get() *AddViewRequest {
	return v.value
}

func (v *NullableAddViewRequest) Set(val *AddViewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddViewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddViewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddViewRequest(val *AddViewRequest) *NullableAddViewRequest {
	return &NullableAddViewRequest{value: val, isSet: true}
}

func (v NullableAddViewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddViewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



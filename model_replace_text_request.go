/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReplaceTextRequest struct for ReplaceTextRequest
type ReplaceTextRequest struct {
	Text *string `json:"text,omitempty"`
	Range []Range `json:"range,omitempty"`
}

// NewReplaceTextRequest instantiates a new ReplaceTextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceTextRequest() *ReplaceTextRequest {
	this := ReplaceTextRequest{}
	return &this
}

// NewReplaceTextRequestWithDefaults instantiates a new ReplaceTextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceTextRequestWithDefaults() *ReplaceTextRequest {
	this := ReplaceTextRequest{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ReplaceTextRequest) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplaceTextRequest) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ReplaceTextRequest) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ReplaceTextRequest) SetText(v string) {
	o.Text = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *ReplaceTextRequest) GetRange() []Range {
	if o == nil || o.Range == nil {
		var ret []Range
		return ret
	}
	return o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplaceTextRequest) GetRangeOk() ([]Range, bool) {
	if o == nil || o.Range == nil {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *ReplaceTextRequest) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}

// SetRange gets a reference to the given []Range and assigns it to the Range field.
func (o *ReplaceTextRequest) SetRange(v []Range) {
	o.Range = v
}

func (o ReplaceTextRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.Range != nil {
		toSerialize["range"] = o.Range
	}
	return json.Marshal(toSerialize)
}

type NullableReplaceTextRequest struct {
	value *ReplaceTextRequest
	isSet bool
}

func (v NullableReplaceTextRequest) Get() *ReplaceTextRequest {
	return v.value
}

func (v *NullableReplaceTextRequest) Set(val *ReplaceTextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceTextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceTextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceTextRequest(val *ReplaceTextRequest) *NullableReplaceTextRequest {
	return &NullableReplaceTextRequest{value: val, isSet: true}
}

func (v NullableReplaceTextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceTextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



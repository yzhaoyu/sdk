/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListValue `ListValue` is a wrapper around a repeated field of values. The JSON representation for `ListValue` is JSON array.
type ListValue struct {
	// Repeated field of dynamically typed values.
	Values []interface{} `json:"values,omitempty"`
}

// NewListValue instantiates a new ListValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListValue() *ListValue {
	this := ListValue{}
	return &this
}

// NewListValueWithDefaults instantiates a new ListValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListValueWithDefaults() *ListValue {
	this := ListValue{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ListValue) GetValues() []interface{} {
	if o == nil || o.Values == nil {
		var ret []interface{}
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListValue) GetValuesOk() ([]interface{}, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ListValue) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []interface{} and assigns it to the Values field.
func (o *ListValue) SetValues(v []interface{}) {
	o.Values = v
}

func (o ListValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableListValue struct {
	value *ListValue
	isSet bool
}

func (v NullableListValue) Get() *ListValue {
	return v.value
}

func (v *NullableListValue) Set(val *ListValue) {
	v.value = val
	v.isSet = true
}

func (v NullableListValue) IsSet() bool {
	return v.isSet
}

func (v *NullableListValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListValue(val *ListValue) *NullableListValue {
	return &NullableListValue{value: val, isSet: true}
}

func (v NullableListValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



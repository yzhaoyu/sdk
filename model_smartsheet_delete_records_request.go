/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmartsheetDeleteRecordsRequest 删除指定表格和子表中的一到多条记录请求
type SmartsheetDeleteRecordsRequest struct {
	RecordIDs []string `json:"recordIDs,omitempty"`
}

// NewSmartsheetDeleteRecordsRequest instantiates a new SmartsheetDeleteRecordsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartsheetDeleteRecordsRequest() *SmartsheetDeleteRecordsRequest {
	this := SmartsheetDeleteRecordsRequest{}
	return &this
}

// NewSmartsheetDeleteRecordsRequestWithDefaults instantiates a new SmartsheetDeleteRecordsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartsheetDeleteRecordsRequestWithDefaults() *SmartsheetDeleteRecordsRequest {
	this := SmartsheetDeleteRecordsRequest{}
	return &this
}

// GetRecordIDs returns the RecordIDs field value if set, zero value otherwise.
func (o *SmartsheetDeleteRecordsRequest) GetRecordIDs() []string {
	if o == nil || o.RecordIDs == nil {
		var ret []string
		return ret
	}
	return o.RecordIDs
}

// GetRecordIDsOk returns a tuple with the RecordIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartsheetDeleteRecordsRequest) GetRecordIDsOk() ([]string, bool) {
	if o == nil || o.RecordIDs == nil {
		return nil, false
	}
	return o.RecordIDs, true
}

// HasRecordIDs returns a boolean if a field has been set.
func (o *SmartsheetDeleteRecordsRequest) HasRecordIDs() bool {
	if o != nil && o.RecordIDs != nil {
		return true
	}

	return false
}

// SetRecordIDs gets a reference to the given []string and assigns it to the RecordIDs field.
func (o *SmartsheetDeleteRecordsRequest) SetRecordIDs(v []string) {
	o.RecordIDs = v
}

func (o SmartsheetDeleteRecordsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecordIDs != nil {
		toSerialize["recordIDs"] = o.RecordIDs
	}
	return json.Marshal(toSerialize)
}

type NullableSmartsheetDeleteRecordsRequest struct {
	value *SmartsheetDeleteRecordsRequest
	isSet bool
}

func (v NullableSmartsheetDeleteRecordsRequest) Get() *SmartsheetDeleteRecordsRequest {
	return v.value
}

func (v *NullableSmartsheetDeleteRecordsRequest) Set(val *SmartsheetDeleteRecordsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartsheetDeleteRecordsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartsheetDeleteRecordsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartsheetDeleteRecordsRequest(val *SmartsheetDeleteRecordsRequest) *NullableSmartsheetDeleteRecordsRequest {
	return &NullableSmartsheetDeleteRecordsRequest{value: val, isSet: true}
}

func (v NullableSmartsheetDeleteRecordsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartsheetDeleteRecordsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



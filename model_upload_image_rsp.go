/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UploadImageRsp struct for UploadImageRsp
type UploadImageRsp struct {
	Ret int32 `json:"ret"`
	Msg string `json:"msg"`
	Data *Response3 `json:"data,omitempty"`
}

// NewUploadImageRsp instantiates a new UploadImageRsp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadImageRsp(ret int32, msg string) *UploadImageRsp {
	this := UploadImageRsp{}
	this.Ret = ret
	this.Msg = msg
	return &this
}

// NewUploadImageRspWithDefaults instantiates a new UploadImageRsp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadImageRspWithDefaults() *UploadImageRsp {
	this := UploadImageRsp{}
	return &this
}

// GetRet returns the Ret field value
func (o *UploadImageRsp) GetRet() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Ret
}

// GetRetOk returns a tuple with the Ret field value
// and a boolean to check if the value has been set.
func (o *UploadImageRsp) GetRetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ret, true
}

// SetRet sets field value
func (o *UploadImageRsp) SetRet(v int32) {
	o.Ret = v
}

// GetMsg returns the Msg field value
func (o *UploadImageRsp) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *UploadImageRsp) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *UploadImageRsp) SetMsg(v string) {
	o.Msg = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *UploadImageRsp) GetData() Response3 {
	if o == nil || o.Data == nil {
		var ret Response3
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UploadImageRsp) GetDataOk() (*Response3, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *UploadImageRsp) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given Response3 and assigns it to the Data field.
func (o *UploadImageRsp) SetData(v Response3) {
	o.Data = &v
}

func (o UploadImageRsp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ret"] = o.Ret
	}
	if true {
		toSerialize["msg"] = o.Msg
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableUploadImageRsp struct {
	value *UploadImageRsp
	isSet bool
}

func (v NullableUploadImageRsp) Get() *UploadImageRsp {
	return v.value
}

func (v *NullableUploadImageRsp) Set(val *UploadImageRsp) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadImageRsp) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadImageRsp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadImageRsp(val *UploadImageRsp) *NullableUploadImageRsp {
	return &NullableUploadImageRsp{value: val, isSet: true}
}

func (v NullableUploadImageRsp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadImageRsp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



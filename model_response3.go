/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by Tencent Docs (https://docs.qq.com); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Response3 struct for Response3
type Response3 struct {
	ImageID string `json:"imageID"`
}

// NewResponse3 instantiates a new Response3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponse3(imageID string) *Response3 {
	this := Response3{}
	this.ImageID = imageID
	return &this
}

// NewResponse3WithDefaults instantiates a new Response3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponse3WithDefaults() *Response3 {
	this := Response3{}
	return &this
}

// GetImageID returns the ImageID field value
func (o *Response3) GetImageID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageID
}

// GetImageIDOk returns a tuple with the ImageID field value
// and a boolean to check if the value has been set.
func (o *Response3) GetImageIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageID, true
}

// SetImageID sets field value
func (o *Response3) SetImageID(v string) {
	o.ImageID = v
}

func (o Response3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageID"] = o.ImageID
	}
	return json.Marshal(toSerialize)
}

type NullableResponse3 struct {
	value *Response3
	isSet bool
}

func (v NullableResponse3) Get() *Response3 {
	return v.value
}

func (v *NullableResponse3) Set(val *Response3) {
	v.value = val
	v.isSet = true
}

func (v NullableResponse3) IsSet() bool {
	return v.isSet
}

func (v *NullableResponse3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponse3(val *Response3) *NullableResponse3 {
	return &NullableResponse3{value: val, isSet: true}
}

func (v NullableResponse3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponse3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



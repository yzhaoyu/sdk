/*
Tencent Docs SDK

Tencent docs sdk contains DocAPI, SmartsheetAPI, SheetAPI, DriveAPI and OAuthAPI

API version: 0.0.1
Contact: tencentdocs@tencent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Record struct for Record
type Record struct {
	Values *map[string]CellValue `json:"values,omitempty"`
	CommentIds []string `json:"commentIds,omitempty"`
	CreatedUserId *string `json:"createdUserId,omitempty"`
	CreatedTime *int64 `json:"createdTime,omitempty"`
}

// NewRecord instantiates a new Record object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecord() *Record {
	this := Record{}
	return &this
}

// NewRecordWithDefaults instantiates a new Record object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordWithDefaults() *Record {
	this := Record{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *Record) GetValues() map[string]CellValue {
	if o == nil || o.Values == nil {
		var ret map[string]CellValue
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Record) GetValuesOk() (*map[string]CellValue, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *Record) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given map[string]CellValue and assigns it to the Values field.
func (o *Record) SetValues(v map[string]CellValue) {
	o.Values = &v
}

// GetCommentIds returns the CommentIds field value if set, zero value otherwise.
func (o *Record) GetCommentIds() []string {
	if o == nil || o.CommentIds == nil {
		var ret []string
		return ret
	}
	return o.CommentIds
}

// GetCommentIdsOk returns a tuple with the CommentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Record) GetCommentIdsOk() ([]string, bool) {
	if o == nil || o.CommentIds == nil {
		return nil, false
	}
	return o.CommentIds, true
}

// HasCommentIds returns a boolean if a field has been set.
func (o *Record) HasCommentIds() bool {
	if o != nil && o.CommentIds != nil {
		return true
	}

	return false
}

// SetCommentIds gets a reference to the given []string and assigns it to the CommentIds field.
func (o *Record) SetCommentIds(v []string) {
	o.CommentIds = v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise.
func (o *Record) GetCreatedUserId() string {
	if o == nil || o.CreatedUserId == nil {
		var ret string
		return ret
	}
	return *o.CreatedUserId
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Record) GetCreatedUserIdOk() (*string, bool) {
	if o == nil || o.CreatedUserId == nil {
		return nil, false
	}
	return o.CreatedUserId, true
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *Record) HasCreatedUserId() bool {
	if o != nil && o.CreatedUserId != nil {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given string and assigns it to the CreatedUserId field.
func (o *Record) SetCreatedUserId(v string) {
	o.CreatedUserId = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Record) GetCreatedTime() int64 {
	if o == nil || o.CreatedTime == nil {
		var ret int64
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Record) GetCreatedTimeOk() (*int64, bool) {
	if o == nil || o.CreatedTime == nil {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Record) HasCreatedTime() bool {
	if o != nil && o.CreatedTime != nil {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given int64 and assigns it to the CreatedTime field.
func (o *Record) SetCreatedTime(v int64) {
	o.CreatedTime = &v
}

func (o Record) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.CommentIds != nil {
		toSerialize["commentIds"] = o.CommentIds
	}
	if o.CreatedUserId != nil {
		toSerialize["createdUserId"] = o.CreatedUserId
	}
	if o.CreatedTime != nil {
		toSerialize["createdTime"] = o.CreatedTime
	}
	return json.Marshal(toSerialize)
}

type NullableRecord struct {
	value *Record
	isSet bool
}

func (v NullableRecord) Get() *Record {
	return v.value
}

func (v *NullableRecord) Set(val *Record) {
	v.value = val
	v.isSet = true
}

func (v NullableRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecord(val *Record) *NullableRecord {
	return &NullableRecord{value: val, isSet: true}
}

func (v NullableRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


